// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_cutscenes_Conversation
#include <cutscenes/Conversation.h>
#endif
#ifndef INCLUDED_cutscenes_DialogueBox
#include <cutscenes/DialogueBox.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_text_FlxTypeText
#include <flixel/addons/text/FlxTypeText.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimer
#include <flixel/util/FlxTimer.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimerManager
#include <flixel/util/FlxTimerManager.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8116a89da7f4c21e_14_new,"cutscenes.DialogueBox","new",0xc13df860,"cutscenes.DialogueBox.new","cutscenes/DialogueBox.hx",14,0x748ed2d1)
HX_LOCAL_STACK_FRAME(_hx_pos_8116a89da7f4c21e_27_update,"cutscenes.DialogueBox","update",0x24e45e09,"cutscenes.DialogueBox.update","cutscenes/DialogueBox.hx",27,0x748ed2d1)
HX_LOCAL_STACK_FRAME(_hx_pos_8116a89da7f4c21e_33_update,"cutscenes.DialogueBox","update",0x24e45e09,"cutscenes.DialogueBox.update","cutscenes/DialogueBox.hx",33,0x748ed2d1)
HX_LOCAL_STACK_FRAME(_hx_pos_8116a89da7f4c21e_37_update,"cutscenes.DialogueBox","update",0x24e45e09,"cutscenes.DialogueBox.update","cutscenes/DialogueBox.hx",37,0x748ed2d1)
namespace cutscenes{

void DialogueBox_obj::__construct( ::Dynamic conversation, ::Dynamic speaker){
            	HX_GC_STACKFRAME(&_hx_pos_8116a89da7f4c21e_14_new)
HXLINE(  19)		this->onSkipDialogue = null();
HXLINE(  18)		this->onNextDialogue = null();
HXLINE(  21)		super::__construct(null(),null(),null());
HXLINE(  23)		this->dialogueConversation =  ::cutscenes::Conversation_obj::__alloc( HX_CTX ,conversation);
HXLINE(  24)		this->add(this->dialogueConversation);
            	}

Dynamic DialogueBox_obj::__CreateEmpty() { return new DialogueBox_obj; }

void *DialogueBox_obj::_hx_vtable = 0;

Dynamic DialogueBox_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DialogueBox_obj > _hx_result = new DialogueBox_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool DialogueBox_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2c01639b) {
		if (inClassId<=(int)0x288ce903) {
			if (inClassId<=(int)0x24d2556a) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x24d2556a;
			} else {
				return inClassId==(int)0x288ce903;
			}
		} else {
			return inClassId==(int)0x2c01639b;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}

void DialogueBox_obj::update(Float elapsed){
            	HX_GC_STACKFRAME(&_hx_pos_8116a89da7f4c21e_27_update)
HXDLIN(  27)		 ::cutscenes::DialogueBox _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(  28)		this->super::update(elapsed);
HXLINE(  30)		if ((this->dialogueConversation->pageIndex >= this->dialogueConversation->convTextContent->length)) {
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::cutscenes::DialogueBox,_gthis) HXARGC(1)
            			void _hx_run( ::flixel::util::FlxTimer tmr){
            				HX_GC_STACKFRAME(&_hx_pos_8116a89da7f4c21e_33_update)
HXLINE(  34)				 ::flixel::addons::text::FlxTypeText fh = _gthis->dialogueConversation->convDialogue;
HXDLIN(  34)				fh->set_alpha((fh->alpha - ((Float)0.2)));
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::cutscenes::DialogueBox,_gthis) HXARGC(1)
            			void _hx_run( ::flixel::util::FlxTimer tmr){
            				HX_GC_STACKFRAME(&_hx_pos_8116a89da7f4c21e_37_update)
HXLINE(  38)				_gthis->dialogueConversation->kill();
HXLINE(  39)				_gthis->onFinish();
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE(  33)			 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.2), ::Dynamic(new _hx_Closure_0(_gthis)),5);
HXLINE(  37)			 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)1.5), ::Dynamic(new _hx_Closure_1(_gthis)),null());
            		}
            	}



::hx::ObjectPtr< DialogueBox_obj > DialogueBox_obj::__new( ::Dynamic conversation, ::Dynamic speaker) {
	::hx::ObjectPtr< DialogueBox_obj > __this = new DialogueBox_obj();
	__this->__construct(conversation,speaker);
	return __this;
}

::hx::ObjectPtr< DialogueBox_obj > DialogueBox_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic conversation, ::Dynamic speaker) {
	DialogueBox_obj *__this = (DialogueBox_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(DialogueBox_obj), true, "cutscenes.DialogueBox"));
	*(void **)__this = DialogueBox_obj::_hx_vtable;
	__this->__construct(conversation,speaker);
	return __this;
}

DialogueBox_obj::DialogueBox_obj()
{
}

void DialogueBox_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DialogueBox);
	HX_MARK_MEMBER_NAME(dialogueConversation,"dialogueConversation");
	HX_MARK_MEMBER_NAME(onFinish,"onFinish");
	HX_MARK_MEMBER_NAME(onNextDialogue,"onNextDialogue");
	HX_MARK_MEMBER_NAME(onSkipDialogue,"onSkipDialogue");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void DialogueBox_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(dialogueConversation,"dialogueConversation");
	HX_VISIT_MEMBER_NAME(onFinish,"onFinish");
	HX_VISIT_MEMBER_NAME(onNextDialogue,"onNextDialogue");
	HX_VISIT_MEMBER_NAME(onSkipDialogue,"onSkipDialogue");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val DialogueBox_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"onFinish") ) { return ::hx::Val( onFinish ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"onNextDialogue") ) { return ::hx::Val( onNextDialogue ); }
		if (HX_FIELD_EQ(inName,"onSkipDialogue") ) { return ::hx::Val( onSkipDialogue ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"dialogueConversation") ) { return ::hx::Val( dialogueConversation ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val DialogueBox_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"onFinish") ) { onFinish=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"onNextDialogue") ) { onNextDialogue=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onSkipDialogue") ) { onSkipDialogue=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"dialogueConversation") ) { dialogueConversation=inValue.Cast<  ::cutscenes::Conversation >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void DialogueBox_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("dialogueConversation",bb,04,db,3d));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo DialogueBox_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::cutscenes::Conversation */ ,(int)offsetof(DialogueBox_obj,dialogueConversation),HX_("dialogueConversation",bb,04,db,3d)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(DialogueBox_obj,onFinish),HX_("onFinish",d2,36,2c,66)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(DialogueBox_obj,onNextDialogue),HX_("onNextDialogue",ea,78,82,7b)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(DialogueBox_obj,onSkipDialogue),HX_("onSkipDialogue",76,76,53,39)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *DialogueBox_obj_sStaticStorageInfo = 0;
#endif

static ::String DialogueBox_obj_sMemberFields[] = {
	HX_("dialogueConversation",bb,04,db,3d),
	HX_("onFinish",d2,36,2c,66),
	HX_("onNextDialogue",ea,78,82,7b),
	HX_("onSkipDialogue",76,76,53,39),
	HX_("update",09,86,05,87),
	::String(null()) };

::hx::Class DialogueBox_obj::__mClass;

void DialogueBox_obj::__register()
{
	DialogueBox_obj _hx_dummy;
	DialogueBox_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("cutscenes.DialogueBox",6e,88,8a,c0);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(DialogueBox_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< DialogueBox_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DialogueBox_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DialogueBox_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace cutscenes
