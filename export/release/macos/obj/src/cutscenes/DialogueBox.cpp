// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_cutscenes_Conversation
#include <cutscenes/Conversation.h>
#endif
#ifndef INCLUDED_cutscenes_DialogueBox
#include <cutscenes/DialogueBox.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8116a89da7f4c21e_16_new,"cutscenes.DialogueBox","new",0xc13df860,"cutscenes.DialogueBox.new","cutscenes/DialogueBox.hx",16,0x748ed2d1)
namespace cutscenes{

void DialogueBox_obj::__construct( ::Dynamic conversation, ::Dynamic speaker){
            	HX_GC_STACKFRAME(&_hx_pos_8116a89da7f4c21e_16_new)
HXLINE(  17)		super::__construct(null(),null(),null());
HXLINE(  19)		 ::cutscenes::Conversation d =  ::cutscenes::Conversation_obj::__alloc( HX_CTX ,conversation);
HXLINE(  20)		this->add(d);
            	}

Dynamic DialogueBox_obj::__CreateEmpty() { return new DialogueBox_obj; }

void *DialogueBox_obj::_hx_vtable = 0;

Dynamic DialogueBox_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DialogueBox_obj > _hx_result = new DialogueBox_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool DialogueBox_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2c01639b) {
		if (inClassId<=(int)0x288ce903) {
			if (inClassId<=(int)0x24d2556a) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x24d2556a;
			} else {
				return inClassId==(int)0x288ce903;
			}
		} else {
			return inClassId==(int)0x2c01639b;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}


::hx::ObjectPtr< DialogueBox_obj > DialogueBox_obj::__new( ::Dynamic conversation, ::Dynamic speaker) {
	::hx::ObjectPtr< DialogueBox_obj > __this = new DialogueBox_obj();
	__this->__construct(conversation,speaker);
	return __this;
}

::hx::ObjectPtr< DialogueBox_obj > DialogueBox_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic conversation, ::Dynamic speaker) {
	DialogueBox_obj *__this = (DialogueBox_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(DialogueBox_obj), true, "cutscenes.DialogueBox"));
	*(void **)__this = DialogueBox_obj::_hx_vtable;
	__this->__construct(conversation,speaker);
	return __this;
}

DialogueBox_obj::DialogueBox_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *DialogueBox_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *DialogueBox_obj_sStaticStorageInfo = 0;
#endif

::hx::Class DialogueBox_obj::__mClass;

void DialogueBox_obj::__register()
{
	DialogueBox_obj _hx_dummy;
	DialogueBox_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("cutscenes.DialogueBox",6e,88,8a,c0);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< DialogueBox_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DialogueBox_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DialogueBox_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace cutscenes
