// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_display_FlxPieDial
#include <flixel/addons/display/FlxPieDial.h>
#endif
#ifndef INCLUDED_flixel_addons_display_FlxPieDialShape
#include <flixel/addons/display/FlxPieDialShape.h>
#endif
#ifndef INCLUDED_flixel_addons_display_FlxPieDialUtils
#include <flixel/addons/display/FlxPieDialUtils.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_graphics_FlxGraphic
#include <flixel/graphics/FlxGraphic.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_f826267fb5a80b8c_30_new,"flixel.addons.display.FlxPieDial","new",0x33b66f11,"flixel.addons.display.FlxPieDial.new","flixel/addons/display/FlxPieDial.hx",30,0x0d52cabe)
HX_LOCAL_STACK_FRAME(_hx_pos_f826267fb5a80b8c_40_draw,"flixel.addons.display.FlxPieDial","draw",0x05586833,"flixel.addons.display.FlxPieDial.draw","flixel/addons/display/FlxPieDial.hx",40,0x0d52cabe)
HX_LOCAL_STACK_FRAME(_hx_pos_f826267fb5a80b8c_48_getPieDialGraphic,"flixel.addons.display.FlxPieDial","getPieDialGraphic",0x7def8d93,"flixel.addons.display.FlxPieDial.getPieDialGraphic","flixel/addons/display/FlxPieDial.hx",48,0x0d52cabe)
HX_LOCAL_STACK_FRAME(_hx_pos_f826267fb5a80b8c_54_set_amount,"flixel.addons.display.FlxPieDial","set_amount",0x54362984,"flixel.addons.display.FlxPieDial.set_amount","flixel/addons/display/FlxPieDial.hx",54,0x0d52cabe)
namespace flixel{
namespace addons{
namespace display{

void FlxPieDial_obj::__construct(::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y,int radius,::hx::Null< int >  __o_color,::hx::Null< int >  __o_frames, ::flixel::addons::display::FlxPieDialShape shape,::hx::Null< bool >  __o_clockwise,::hx::Null< int >  __o_innerRadius){
            		Float x = __o_x.Default(((Float)0.0));
            		Float y = __o_y.Default(((Float)0.0));
            		int color = __o_color.Default(-1);
            		int frames = __o_frames.Default(36);
            		bool clockwise = __o_clockwise.Default(true);
            		int innerRadius = __o_innerRadius.Default(0);
            	HX_STACKFRAME(&_hx_pos_f826267fb5a80b8c_30_new)
HXLINE(  31)		if (::hx::IsNull( shape )) {
HXLINE(  32)			shape = ::flixel::addons::display::FlxPieDialShape_obj::CIRCLE_dyn();
            		}
HXLINE(  34)		super::__construct(x,y,null());
HXLINE(  35)		this->getPieDialGraphic(radius,color,frames,shape,clockwise,innerRadius);
HXLINE(  36)		this->set_amount(((Float)1.0));
            	}

Dynamic FlxPieDial_obj::__CreateEmpty() { return new FlxPieDial_obj; }

void *FlxPieDial_obj::_hx_vtable = 0;

Dynamic FlxPieDial_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FlxPieDial_obj > _hx_result = new FlxPieDial_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5],inArgs[6],inArgs[7]);
	return _hx_result;
}

bool FlxPieDial_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3b1105fd) {
		if (inClassId<=(int)0x2c01639b) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x2c01639b;
		} else {
			return inClassId==(int)0x3b1105fd;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}

void FlxPieDial_obj::draw(){
            	HX_STACKFRAME(&_hx_pos_f826267fb5a80b8c_40_draw)
HXLINE(  41)		Float _hx_tmp = this->amount;
HXDLIN(  41)		if (((_hx_tmp * ( (Float)(this->animation->_sprite->get_numFrames()) )) < 1)) {
HXLINE(  42)			return;
            		}
HXLINE(  44)		this->super::draw();
            	}


void FlxPieDial_obj::getPieDialGraphic(int radius,int color,int frames, ::flixel::addons::display::FlxPieDialShape shape,bool clockwise,int innerRadius){
            	HX_STACKFRAME(&_hx_pos_f826267fb5a80b8c_48_getPieDialGraphic)
HXLINE(  49)		 ::flixel::graphics::FlxGraphic graphic = ::flixel::addons::display::FlxPieDialUtils_obj::getPieDialGraphic(radius,color,frames,shape,clockwise,innerRadius);
HXLINE(  50)		this->loadGraphic(graphic,true,(radius * 2),(radius * 2),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC6(FlxPieDial_obj,getPieDialGraphic,(void))

Float FlxPieDial_obj::set_amount(Float f){
            	HX_STACKFRAME(&_hx_pos_f826267fb5a80b8c_54_set_amount)
HXLINE(  55)		Float lowerBound;
HXDLIN(  55)		if ((f < ((Float)0.0))) {
HXLINE(  55)			lowerBound = ((Float)0.0);
            		}
            		else {
HXLINE(  55)			lowerBound = f;
            		}
HXDLIN(  55)		Float _hx_tmp;
HXDLIN(  55)		if ((lowerBound > ((Float)1.0))) {
HXLINE(  55)			_hx_tmp = ((Float)1.0);
            		}
            		else {
HXLINE(  55)			_hx_tmp = lowerBound;
            		}
HXDLIN(  55)		this->amount = _hx_tmp;
HXLINE(  56)		int frame = ::Std_obj::_hx_int((f * ( (Float)(this->animation->_sprite->get_numFrames()) )));
HXLINE(  57)		this->animation->set_frameIndex(frame);
HXLINE(  58)		if ((this->amount == ((Float)1.0))) {
HXLINE(  60)			this->animation->set_frameIndex(0);
            		}
HXLINE(  62)		return this->amount;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxPieDial_obj,set_amount,return )


::hx::ObjectPtr< FlxPieDial_obj > FlxPieDial_obj::__new(::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y,int radius,::hx::Null< int >  __o_color,::hx::Null< int >  __o_frames, ::flixel::addons::display::FlxPieDialShape shape,::hx::Null< bool >  __o_clockwise,::hx::Null< int >  __o_innerRadius) {
	::hx::ObjectPtr< FlxPieDial_obj > __this = new FlxPieDial_obj();
	__this->__construct(__o_x,__o_y,radius,__o_color,__o_frames,shape,__o_clockwise,__o_innerRadius);
	return __this;
}

::hx::ObjectPtr< FlxPieDial_obj > FlxPieDial_obj::__alloc(::hx::Ctx *_hx_ctx,::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y,int radius,::hx::Null< int >  __o_color,::hx::Null< int >  __o_frames, ::flixel::addons::display::FlxPieDialShape shape,::hx::Null< bool >  __o_clockwise,::hx::Null< int >  __o_innerRadius) {
	FlxPieDial_obj *__this = (FlxPieDial_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FlxPieDial_obj), true, "flixel.addons.display.FlxPieDial"));
	*(void **)__this = FlxPieDial_obj::_hx_vtable;
	__this->__construct(__o_x,__o_y,radius,__o_color,__o_frames,shape,__o_clockwise,__o_innerRadius);
	return __this;
}

FlxPieDial_obj::FlxPieDial_obj()
{
}

::hx::Val FlxPieDial_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"draw") ) { return ::hx::Val( draw_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"amount") ) { return ::hx::Val( amount ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"set_amount") ) { return ::hx::Val( set_amount_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"getPieDialGraphic") ) { return ::hx::Val( getPieDialGraphic_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val FlxPieDial_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"amount") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_amount(inValue.Cast< Float >()) );amount=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxPieDial_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("amount",d8,11,03,d5));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo FlxPieDial_obj_sMemberStorageInfo[] = {
	{::hx::fsFloat,(int)offsetof(FlxPieDial_obj,amount),HX_("amount",d8,11,03,d5)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *FlxPieDial_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxPieDial_obj_sMemberFields[] = {
	HX_("amount",d8,11,03,d5),
	HX_("draw",04,2c,70,42),
	HX_("getPieDialGraphic",22,fb,7a,94),
	HX_("set_amount",15,20,08,c9),
	::String(null()) };

::hx::Class FlxPieDial_obj::__mClass;

void FlxPieDial_obj::__register()
{
	FlxPieDial_obj _hx_dummy;
	FlxPieDial_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.addons.display.FlxPieDial",9f,92,13,02);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FlxPieDial_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FlxPieDial_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxPieDial_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxPieDial_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace addons
} // end namespace display
