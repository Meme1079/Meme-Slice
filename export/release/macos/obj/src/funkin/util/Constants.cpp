// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_funkin_util_Constants
#include <funkin/util/Constants.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_lime_app_Application
#include <lime/app/Application.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_app_Module
#include <lime/app/Module.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_37_get_GENERATED_BY,"funkin.util.Constants","get_GENERATED_BY",0x8f70c3fe,"funkin.util.Constants.get_GENERATED_BY","funkin/util/Constants.hx",37,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_54_get_VERSION,"funkin.util.Constants","get_VERSION",0x63fc6e41,"funkin.util.Constants.get_VERSION","funkin/util/Constants.hx",54,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_22_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",22,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_44_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",44,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_61_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",61,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_72_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",72,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_79_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",79,0x3b47a27e)
static const ::String _hx_array_data_e10030a0_7[] = {
	HX_("https://www.newgrounds.com/portal/view/770371",4e,b1,8b,f3),HX_("localhost",53,2a,7c,1c),
};
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_87_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",87,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_92_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",92,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_97_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",97,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_129_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",129,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_134_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",134,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_139_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",139,0x3b47a27e)
static const int _hx_array_data_e10030a0_14[] = {
	(int)-56662,(int)-16716033,(int)-16724992,(int)-3403503,
};
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_149_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",149,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_154_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",154,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_159_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",159,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_164_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",164,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_169_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",169,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_174_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",174,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_180_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",180,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_182_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",182,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_192_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",192,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_198_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",198,0x3b47a27e)
static const ::String _hx_array_data_e10030a0_25[] = {
	HX_("easy",02,8c,0c,43),HX_("normal",27,72,69,30),HX_("hard",eb,2e,08,45),
};
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_203_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",203,0x3b47a27e)
static const ::String _hx_array_data_e10030a0_27[] = {
	HX_("erect",09,e4,1f,73),HX_("nightmare",df,c5,7d,7c),
};
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_209_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",209,0x3b47a27e)
static const ::String _hx_array_data_e10030a0_29[] = {
	HX_("easy",02,8c,0c,43),HX_("normal",27,72,69,30),HX_("hard",eb,2e,08,45),HX_("erect",09,e4,1f,73),HX_("nightmare",df,c5,7d,7c),
};
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_214_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",214,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_219_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",219,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_224_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",224,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_229_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",229,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_234_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",234,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_239_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",239,0x3b47a27e)
static const ::String _hx_array_data_e10030a0_36[] = {
	HX_("default",c1,d8,c3,9b),HX_("erect",09,e4,1f,73),HX_("pico",e5,e8,57,4a),HX_("bf",c4,55,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_244_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",244,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_250_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",250,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_255_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",255,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_260_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",260,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_265_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",265,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_270_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",270,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_275_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",275,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_280_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",280,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_285_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",285,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_290_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",290,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_295_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",295,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_305_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",305,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_310_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",310,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_315_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",315,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_325_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",325,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_330_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",330,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_340_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",340,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_345_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",345,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_352_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",352,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_357_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",357,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_362_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",362,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_367_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",367,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_372_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",372,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_377_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",377,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_382_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",382,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_387_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",387,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_392_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",392,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_398_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",398,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_404_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",404,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_413_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",413,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_424_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",424,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_429_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",429,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_435_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",435,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_440_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",440,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_445_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",445,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_450_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",450,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_455_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",455,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_461_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",461,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_466_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",466,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_471_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",471,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_476_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",476,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_481_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",481,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_486_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",486,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_491_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",491,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_502_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",502,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_507_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",507,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_512_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",512,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_514_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",514,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_515_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",515,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_516_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",516,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_517_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",517,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_518_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",518,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_521_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",521,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_522_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",522,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_523_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",523,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_524_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",524,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_538_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",538,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_543_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",543,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_548_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",548,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_553_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",553,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_558_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",558,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_578_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",578,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_583_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",583,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_588_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",588,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_593_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",593,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_598_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",598,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_603_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",603,0x3b47a27e)
HX_LOCAL_STACK_FRAME(_hx_pos_1738cc3fe3b2e2c8_609_boot,"funkin.util.Constants","boot",0x56f5bec0,"funkin.util.Constants.boot","funkin/util/Constants.hx",609,0x3b47a27e)
namespace funkin{
namespace util{

void Constants_obj::__construct() { }

Dynamic Constants_obj::__CreateEmpty() { return new Constants_obj; }

void *Constants_obj::_hx_vtable = 0;

Dynamic Constants_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Constants_obj > _hx_result = new Constants_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Constants_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0836eb38;
}

::String Constants_obj::TITLE;

::String Constants_obj::get_GENERATED_BY(){
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_37_get_GENERATED_BY)
HXDLIN(  37)		return (((HX_("",00,00,00,00) + ::funkin::util::Constants_obj::TITLE) + HX_(" - ",73,6f,18,00)) + ::funkin::util::Constants_obj::get_VERSION());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Constants_obj,get_GENERATED_BY,return )

::String Constants_obj::VERSION_SUFFIX;

::String Constants_obj::get_VERSION(){
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_54_get_VERSION)
HXDLIN(  54)		return ((HX_("v",76,00,00,00) + ::lime::app::Application_obj::current->meta->get(HX_("version",18,e7,f1,7c))) + ::funkin::util::Constants_obj::VERSION_SUFFIX);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Constants_obj,get_VERSION,return )

bool Constants_obj::DEBUG_BUILD;

::String Constants_obj::URL_MERCH_FALLBACK;

::Array< ::String > Constants_obj::SITE_LOCK;

::String Constants_obj::URL_ITCH;

::String Constants_obj::URL_NEWGROUNDS;

::String Constants_obj::URL_KICKSTARTER;

int Constants_obj::COLOR_HEALTH_BAR_RED;

int Constants_obj::COLOR_HEALTH_BAR_GREEN;

::Array< int > Constants_obj::COLOR_NOTES;

int Constants_obj::COLOR_PRELOADER_BG;

int Constants_obj::COLOR_PRELOADER_BAR;

int Constants_obj::COLOR_PRELOADER_LOCK_BG;

int Constants_obj::COLOR_PRELOADER_LOCK_FG;

int Constants_obj::COLOR_PRELOADER_LOCK_FONT;

int Constants_obj::COLOR_PRELOADER_LOCK_LINK;

::String Constants_obj::SITE_LOCK_TITLE;

::String Constants_obj::SITE_LOCK_DESC;

::String Constants_obj::DEFAULT_DIFFICULTY;

::Array< ::String > Constants_obj::DEFAULT_DIFFICULTY_LIST;

::Array< ::String > Constants_obj::DEFAULT_DIFFICULTY_LIST_ERECT;

::Array< ::String > Constants_obj::DEFAULT_DIFFICULTY_LIST_FULL;

::String Constants_obj::DEFAULT_CHARACTER;

::String Constants_obj::DEFAULT_HEALTH_ICON;

::String Constants_obj::DEFAULT_STAGE;

::String Constants_obj::DEFAULT_SONG;

::String Constants_obj::DEFAULT_VARIATION;

::Array< ::String > Constants_obj::DEFAULT_VARIATION_LIST;

::String Constants_obj::DEFAULT_STICKER_PACK;

Float Constants_obj::DEFAULT_BOP_INTENSITY;

int Constants_obj::DEFAULT_ZOOM_RATE;

Float Constants_obj::DEFAULT_BPM;

::String Constants_obj::DEFAULT_SONGNAME;

::String Constants_obj::DEFAULT_ARTIST;

::String Constants_obj::DEFAULT_CHARTER;

::String Constants_obj::DEFAULT_NOTE_STYLE;

::String Constants_obj::DEFAULT_FREEPLAY_STYLE;

::String Constants_obj::DEFAULT_PIXEL_NOTE_STYLE;

::String Constants_obj::DEFAULT_ALBUM_ID;

Float Constants_obj::DEFAULT_SCROLLSPEED;

int Constants_obj::DEFAULT_TIME_SIGNATURE_NUM;

int Constants_obj::DEFAULT_TIME_SIGNATURE_DEN;

::String Constants_obj::ANIMATION_HOLD_SUFFIX;

::String Constants_obj::ANIMATION_END_SUFFIX;

Float Constants_obj::PIXELS_PER_MS;

Float Constants_obj::HIT_WINDOW_MS;

int Constants_obj::SECS_PER_MIN;

int Constants_obj::MS_PER_SEC;

int Constants_obj::US_PER_MS;

int Constants_obj::US_PER_SEC;

int Constants_obj::NS_PER_US;

int Constants_obj::NS_PER_MS;

int Constants_obj::NS_PER_SEC;

int Constants_obj::NOTIFICATION_DISMISS_TIME;

Float Constants_obj::AUTOSAVE_TIMER_DELAY_SEC;

int Constants_obj::STEPS_PER_BEAT;

Float Constants_obj::MP3_DELAY_MS;

Float Constants_obj::PRELOADER_MIN_STAGE_TIME;

Float Constants_obj::HEALTH_MAX;

Float Constants_obj::HEALTH_STARTING;

Float Constants_obj::HEALTH_MIN;

Float Constants_obj::HEALTH_KILLER_BONUS;

Float Constants_obj::HEALTH_SICK_BONUS;

Float Constants_obj::HEALTH_GOOD_BONUS;

Float Constants_obj::HEALTH_BAD_BONUS;

Float Constants_obj::HEALTH_SHIT_BONUS;

Float Constants_obj::HEALTH_HOLD_BONUS_PER_SECOND;

Float Constants_obj::HEALTH_MISS_PENALTY;

Float Constants_obj::HEALTH_GHOST_MISS_PENALTY;

Float Constants_obj::HEALTH_HOLD_DROP_PENALTY_PER_SECOND;

Float Constants_obj::HEALTH_HOLD_DROP_PENALTY_MAX;

Float Constants_obj::HEALTH_MINE_PENALTY;

Float Constants_obj::SCORE_HOLD_BONUS_PER_SECOND;

Float Constants_obj::SCORE_HOLD_DROP_PENALTY_PER_SECOND;

Float Constants_obj::HOLD_DROP_PENALTY_THRESHOLD_MS;

bool Constants_obj::JUDGEMENT_KILLER_COMBO_BREAK;

bool Constants_obj::JUDGEMENT_SICK_COMBO_BREAK;

bool Constants_obj::JUDGEMENT_GOOD_COMBO_BREAK;

bool Constants_obj::JUDGEMENT_BAD_COMBO_BREAK;

bool Constants_obj::JUDGEMENT_SHIT_COMBO_BREAK;

Float Constants_obj::RANK_PERFECT_THRESHOLD;

Float Constants_obj::RANK_EXCELLENT_THRESHOLD;

Float Constants_obj::RANK_GREAT_THRESHOLD;

Float Constants_obj::RANK_GOOD_THRESHOLD;

::String Constants_obj::EXT_CHART;

::String Constants_obj::EXT_SOUND;

::String Constants_obj::EXT_VIDEO;

::String Constants_obj::EXT_IMAGE;

::String Constants_obj::EXT_DATA;

int Constants_obj::MAX_PREVIOUS_WORKING_FILES;

::String Constants_obj::LIBRARY_SEPARATOR;

Float Constants_obj::PIXEL_ART_SCALE;

Float Constants_obj::COUNTDOWN_VOLUME;

Float Constants_obj::STRUMLINE_X_OFFSET;

Float Constants_obj::STRUMLINE_Y_OFFSET;

Float Constants_obj::DEFAULT_CAMERA_FOLLOW_RATE;


Constants_obj::Constants_obj()
{
}

bool Constants_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"TITLE") ) { outValue = ( TITLE ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"VERSION") ) { if (inCallProp == ::hx::paccAlways) { outValue = ( get_VERSION() ); return true; } }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"URL_ITCH") ) { outValue = ( URL_ITCH ); return true; }
		if (HX_FIELD_EQ(inName,"EXT_DATA") ) { outValue = ( EXT_DATA ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"SITE_LOCK") ) { outValue = ( SITE_LOCK ); return true; }
		if (HX_FIELD_EQ(inName,"US_PER_MS") ) { outValue = ( US_PER_MS ); return true; }
		if (HX_FIELD_EQ(inName,"NS_PER_US") ) { outValue = ( NS_PER_US ); return true; }
		if (HX_FIELD_EQ(inName,"NS_PER_MS") ) { outValue = ( NS_PER_MS ); return true; }
		if (HX_FIELD_EQ(inName,"EXT_CHART") ) { outValue = ( EXT_CHART ); return true; }
		if (HX_FIELD_EQ(inName,"EXT_SOUND") ) { outValue = ( EXT_SOUND ); return true; }
		if (HX_FIELD_EQ(inName,"EXT_VIDEO") ) { outValue = ( EXT_VIDEO ); return true; }
		if (HX_FIELD_EQ(inName,"EXT_IMAGE") ) { outValue = ( EXT_IMAGE ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"MS_PER_SEC") ) { outValue = ( MS_PER_SEC ); return true; }
		if (HX_FIELD_EQ(inName,"US_PER_SEC") ) { outValue = ( US_PER_SEC ); return true; }
		if (HX_FIELD_EQ(inName,"NS_PER_SEC") ) { outValue = ( NS_PER_SEC ); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_MAX") ) { outValue = ( HEALTH_MAX ); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_MIN") ) { outValue = ( HEALTH_MIN ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"get_VERSION") ) { outValue = get_VERSION_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"DEBUG_BUILD") ) { outValue = ( DEBUG_BUILD ); return true; }
		if (HX_FIELD_EQ(inName,"COLOR_NOTES") ) { outValue = ( COLOR_NOTES ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_BPM") ) { outValue = ( DEFAULT_BPM ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"GENERATED_BY") ) { if (inCallProp == ::hx::paccAlways) { outValue = ( get_GENERATED_BY() ); return true; } }
		if (HX_FIELD_EQ(inName,"DEFAULT_SONG") ) { outValue = ( DEFAULT_SONG ); return true; }
		if (HX_FIELD_EQ(inName,"SECS_PER_MIN") ) { outValue = ( SECS_PER_MIN ); return true; }
		if (HX_FIELD_EQ(inName,"MP3_DELAY_MS") ) { outValue = ( MP3_DELAY_MS ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"DEFAULT_STAGE") ) { outValue = ( DEFAULT_STAGE ); return true; }
		if (HX_FIELD_EQ(inName,"PIXELS_PER_MS") ) { outValue = ( PIXELS_PER_MS ); return true; }
		if (HX_FIELD_EQ(inName,"HIT_WINDOW_MS") ) { outValue = ( HIT_WINDOW_MS ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"VERSION_SUFFIX") ) { outValue = ( VERSION_SUFFIX ); return true; }
		if (HX_FIELD_EQ(inName,"URL_NEWGROUNDS") ) { outValue = ( URL_NEWGROUNDS ); return true; }
		if (HX_FIELD_EQ(inName,"SITE_LOCK_DESC") ) { outValue = ( SITE_LOCK_DESC ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_ARTIST") ) { outValue = ( DEFAULT_ARTIST ); return true; }
		if (HX_FIELD_EQ(inName,"STEPS_PER_BEAT") ) { outValue = ( STEPS_PER_BEAT ); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"URL_KICKSTARTER") ) { outValue = ( URL_KICKSTARTER ); return true; }
		if (HX_FIELD_EQ(inName,"SITE_LOCK_TITLE") ) { outValue = ( SITE_LOCK_TITLE ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_CHARTER") ) { outValue = ( DEFAULT_CHARTER ); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_STARTING") ) { outValue = ( HEALTH_STARTING ); return true; }
		if (HX_FIELD_EQ(inName,"PIXEL_ART_SCALE") ) { outValue = ( PIXEL_ART_SCALE ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_GENERATED_BY") ) { outValue = get_GENERATED_BY_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_SONGNAME") ) { outValue = ( DEFAULT_SONGNAME ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_ALBUM_ID") ) { outValue = ( DEFAULT_ALBUM_ID ); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_BAD_BONUS") ) { outValue = ( HEALTH_BAD_BONUS ); return true; }
		if (HX_FIELD_EQ(inName,"COUNTDOWN_VOLUME") ) { outValue = ( COUNTDOWN_VOLUME ); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"DEFAULT_CHARACTER") ) { outValue = ( DEFAULT_CHARACTER ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_VARIATION") ) { outValue = ( DEFAULT_VARIATION ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_ZOOM_RATE") ) { outValue = ( DEFAULT_ZOOM_RATE ); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_SICK_BONUS") ) { outValue = ( HEALTH_SICK_BONUS ); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_GOOD_BONUS") ) { outValue = ( HEALTH_GOOD_BONUS ); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_SHIT_BONUS") ) { outValue = ( HEALTH_SHIT_BONUS ); return true; }
		if (HX_FIELD_EQ(inName,"LIBRARY_SEPARATOR") ) { outValue = ( LIBRARY_SEPARATOR ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"URL_MERCH_FALLBACK") ) { outValue = ( URL_MERCH_FALLBACK ); return true; }
		if (HX_FIELD_EQ(inName,"COLOR_PRELOADER_BG") ) { outValue = ( COLOR_PRELOADER_BG ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_DIFFICULTY") ) { outValue = ( DEFAULT_DIFFICULTY ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_NOTE_STYLE") ) { outValue = ( DEFAULT_NOTE_STYLE ); return true; }
		if (HX_FIELD_EQ(inName,"STRUMLINE_X_OFFSET") ) { outValue = ( STRUMLINE_X_OFFSET ); return true; }
		if (HX_FIELD_EQ(inName,"STRUMLINE_Y_OFFSET") ) { outValue = ( STRUMLINE_Y_OFFSET ); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"COLOR_PRELOADER_BAR") ) { outValue = ( COLOR_PRELOADER_BAR ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_HEALTH_ICON") ) { outValue = ( DEFAULT_HEALTH_ICON ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_SCROLLSPEED") ) { outValue = ( DEFAULT_SCROLLSPEED ); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_KILLER_BONUS") ) { outValue = ( HEALTH_KILLER_BONUS ); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_MISS_PENALTY") ) { outValue = ( HEALTH_MISS_PENALTY ); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_MINE_PENALTY") ) { outValue = ( HEALTH_MINE_PENALTY ); return true; }
		if (HX_FIELD_EQ(inName,"RANK_GOOD_THRESHOLD") ) { outValue = ( RANK_GOOD_THRESHOLD ); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"COLOR_HEALTH_BAR_RED") ) { outValue = ( COLOR_HEALTH_BAR_RED ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_STICKER_PACK") ) { outValue = ( DEFAULT_STICKER_PACK ); return true; }
		if (HX_FIELD_EQ(inName,"ANIMATION_END_SUFFIX") ) { outValue = ( ANIMATION_END_SUFFIX ); return true; }
		if (HX_FIELD_EQ(inName,"RANK_GREAT_THRESHOLD") ) { outValue = ( RANK_GREAT_THRESHOLD ); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"DEFAULT_BOP_INTENSITY") ) { outValue = ( DEFAULT_BOP_INTENSITY ); return true; }
		if (HX_FIELD_EQ(inName,"ANIMATION_HOLD_SUFFIX") ) { outValue = ( ANIMATION_HOLD_SUFFIX ); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"COLOR_HEALTH_BAR_GREEN") ) { outValue = ( COLOR_HEALTH_BAR_GREEN ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_VARIATION_LIST") ) { outValue = ( DEFAULT_VARIATION_LIST ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_FREEPLAY_STYLE") ) { outValue = ( DEFAULT_FREEPLAY_STYLE ); return true; }
		if (HX_FIELD_EQ(inName,"RANK_PERFECT_THRESHOLD") ) { outValue = ( RANK_PERFECT_THRESHOLD ); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"COLOR_PRELOADER_LOCK_BG") ) { outValue = ( COLOR_PRELOADER_LOCK_BG ); return true; }
		if (HX_FIELD_EQ(inName,"COLOR_PRELOADER_LOCK_FG") ) { outValue = ( COLOR_PRELOADER_LOCK_FG ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_DIFFICULTY_LIST") ) { outValue = ( DEFAULT_DIFFICULTY_LIST ); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"DEFAULT_PIXEL_NOTE_STYLE") ) { outValue = ( DEFAULT_PIXEL_NOTE_STYLE ); return true; }
		if (HX_FIELD_EQ(inName,"AUTOSAVE_TIMER_DELAY_SEC") ) { outValue = ( AUTOSAVE_TIMER_DELAY_SEC ); return true; }
		if (HX_FIELD_EQ(inName,"PRELOADER_MIN_STAGE_TIME") ) { outValue = ( PRELOADER_MIN_STAGE_TIME ); return true; }
		if (HX_FIELD_EQ(inName,"RANK_EXCELLENT_THRESHOLD") ) { outValue = ( RANK_EXCELLENT_THRESHOLD ); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"COLOR_PRELOADER_LOCK_FONT") ) { outValue = ( COLOR_PRELOADER_LOCK_FONT ); return true; }
		if (HX_FIELD_EQ(inName,"COLOR_PRELOADER_LOCK_LINK") ) { outValue = ( COLOR_PRELOADER_LOCK_LINK ); return true; }
		if (HX_FIELD_EQ(inName,"NOTIFICATION_DISMISS_TIME") ) { outValue = ( NOTIFICATION_DISMISS_TIME ); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_GHOST_MISS_PENALTY") ) { outValue = ( HEALTH_GHOST_MISS_PENALTY ); return true; }
		if (HX_FIELD_EQ(inName,"JUDGEMENT_BAD_COMBO_BREAK") ) { outValue = ( JUDGEMENT_BAD_COMBO_BREAK ); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"DEFAULT_TIME_SIGNATURE_NUM") ) { outValue = ( DEFAULT_TIME_SIGNATURE_NUM ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_TIME_SIGNATURE_DEN") ) { outValue = ( DEFAULT_TIME_SIGNATURE_DEN ); return true; }
		if (HX_FIELD_EQ(inName,"JUDGEMENT_SICK_COMBO_BREAK") ) { outValue = ( JUDGEMENT_SICK_COMBO_BREAK ); return true; }
		if (HX_FIELD_EQ(inName,"JUDGEMENT_GOOD_COMBO_BREAK") ) { outValue = ( JUDGEMENT_GOOD_COMBO_BREAK ); return true; }
		if (HX_FIELD_EQ(inName,"JUDGEMENT_SHIT_COMBO_BREAK") ) { outValue = ( JUDGEMENT_SHIT_COMBO_BREAK ); return true; }
		if (HX_FIELD_EQ(inName,"MAX_PREVIOUS_WORKING_FILES") ) { outValue = ( MAX_PREVIOUS_WORKING_FILES ); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_CAMERA_FOLLOW_RATE") ) { outValue = ( DEFAULT_CAMERA_FOLLOW_RATE ); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"SCORE_HOLD_BONUS_PER_SECOND") ) { outValue = ( SCORE_HOLD_BONUS_PER_SECOND ); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"DEFAULT_DIFFICULTY_LIST_FULL") ) { outValue = ( DEFAULT_DIFFICULTY_LIST_FULL ); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_HOLD_BONUS_PER_SECOND") ) { outValue = ( HEALTH_HOLD_BONUS_PER_SECOND ); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_HOLD_DROP_PENALTY_MAX") ) { outValue = ( HEALTH_HOLD_DROP_PENALTY_MAX ); return true; }
		if (HX_FIELD_EQ(inName,"JUDGEMENT_KILLER_COMBO_BREAK") ) { outValue = ( JUDGEMENT_KILLER_COMBO_BREAK ); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"DEFAULT_DIFFICULTY_LIST_ERECT") ) { outValue = ( DEFAULT_DIFFICULTY_LIST_ERECT ); return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"HOLD_DROP_PENALTY_THRESHOLD_MS") ) { outValue = ( HOLD_DROP_PENALTY_THRESHOLD_MS ); return true; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"SCORE_HOLD_DROP_PENALTY_PER_SECOND") ) { outValue = ( SCORE_HOLD_DROP_PENALTY_PER_SECOND ); return true; }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"HEALTH_HOLD_DROP_PENALTY_PER_SECOND") ) { outValue = ( HEALTH_HOLD_DROP_PENALTY_PER_SECOND ); return true; }
	}
	return false;
}

bool Constants_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"TITLE") ) { TITLE=ioValue.Cast< ::String >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"URL_ITCH") ) { URL_ITCH=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"EXT_DATA") ) { EXT_DATA=ioValue.Cast< ::String >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"SITE_LOCK") ) { SITE_LOCK=ioValue.Cast< ::Array< ::String > >(); return true; }
		if (HX_FIELD_EQ(inName,"US_PER_MS") ) { US_PER_MS=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"NS_PER_US") ) { NS_PER_US=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"NS_PER_MS") ) { NS_PER_MS=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"EXT_CHART") ) { EXT_CHART=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"EXT_SOUND") ) { EXT_SOUND=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"EXT_VIDEO") ) { EXT_VIDEO=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"EXT_IMAGE") ) { EXT_IMAGE=ioValue.Cast< ::String >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"MS_PER_SEC") ) { MS_PER_SEC=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"US_PER_SEC") ) { US_PER_SEC=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"NS_PER_SEC") ) { NS_PER_SEC=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_MAX") ) { HEALTH_MAX=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_MIN") ) { HEALTH_MIN=ioValue.Cast< Float >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"DEBUG_BUILD") ) { DEBUG_BUILD=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"COLOR_NOTES") ) { COLOR_NOTES=ioValue.Cast< ::Array< int > >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_BPM") ) { DEFAULT_BPM=ioValue.Cast< Float >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"DEFAULT_SONG") ) { DEFAULT_SONG=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"SECS_PER_MIN") ) { SECS_PER_MIN=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"MP3_DELAY_MS") ) { MP3_DELAY_MS=ioValue.Cast< Float >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"DEFAULT_STAGE") ) { DEFAULT_STAGE=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"PIXELS_PER_MS") ) { PIXELS_PER_MS=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"HIT_WINDOW_MS") ) { HIT_WINDOW_MS=ioValue.Cast< Float >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"VERSION_SUFFIX") ) { VERSION_SUFFIX=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"URL_NEWGROUNDS") ) { URL_NEWGROUNDS=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"SITE_LOCK_DESC") ) { SITE_LOCK_DESC=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_ARTIST") ) { DEFAULT_ARTIST=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"STEPS_PER_BEAT") ) { STEPS_PER_BEAT=ioValue.Cast< int >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"URL_KICKSTARTER") ) { URL_KICKSTARTER=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"SITE_LOCK_TITLE") ) { SITE_LOCK_TITLE=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_CHARTER") ) { DEFAULT_CHARTER=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_STARTING") ) { HEALTH_STARTING=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"PIXEL_ART_SCALE") ) { PIXEL_ART_SCALE=ioValue.Cast< Float >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"DEFAULT_SONGNAME") ) { DEFAULT_SONGNAME=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_ALBUM_ID") ) { DEFAULT_ALBUM_ID=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_BAD_BONUS") ) { HEALTH_BAD_BONUS=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"COUNTDOWN_VOLUME") ) { COUNTDOWN_VOLUME=ioValue.Cast< Float >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"DEFAULT_CHARACTER") ) { DEFAULT_CHARACTER=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_VARIATION") ) { DEFAULT_VARIATION=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_ZOOM_RATE") ) { DEFAULT_ZOOM_RATE=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_SICK_BONUS") ) { HEALTH_SICK_BONUS=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_GOOD_BONUS") ) { HEALTH_GOOD_BONUS=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_SHIT_BONUS") ) { HEALTH_SHIT_BONUS=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"LIBRARY_SEPARATOR") ) { LIBRARY_SEPARATOR=ioValue.Cast< ::String >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"URL_MERCH_FALLBACK") ) { URL_MERCH_FALLBACK=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"COLOR_PRELOADER_BG") ) { COLOR_PRELOADER_BG=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_DIFFICULTY") ) { DEFAULT_DIFFICULTY=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_NOTE_STYLE") ) { DEFAULT_NOTE_STYLE=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"STRUMLINE_X_OFFSET") ) { STRUMLINE_X_OFFSET=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"STRUMLINE_Y_OFFSET") ) { STRUMLINE_Y_OFFSET=ioValue.Cast< Float >(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"COLOR_PRELOADER_BAR") ) { COLOR_PRELOADER_BAR=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_HEALTH_ICON") ) { DEFAULT_HEALTH_ICON=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_SCROLLSPEED") ) { DEFAULT_SCROLLSPEED=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_KILLER_BONUS") ) { HEALTH_KILLER_BONUS=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_MISS_PENALTY") ) { HEALTH_MISS_PENALTY=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_MINE_PENALTY") ) { HEALTH_MINE_PENALTY=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"RANK_GOOD_THRESHOLD") ) { RANK_GOOD_THRESHOLD=ioValue.Cast< Float >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"COLOR_HEALTH_BAR_RED") ) { COLOR_HEALTH_BAR_RED=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_STICKER_PACK") ) { DEFAULT_STICKER_PACK=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"ANIMATION_END_SUFFIX") ) { ANIMATION_END_SUFFIX=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"RANK_GREAT_THRESHOLD") ) { RANK_GREAT_THRESHOLD=ioValue.Cast< Float >(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"DEFAULT_BOP_INTENSITY") ) { DEFAULT_BOP_INTENSITY=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"ANIMATION_HOLD_SUFFIX") ) { ANIMATION_HOLD_SUFFIX=ioValue.Cast< ::String >(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"COLOR_HEALTH_BAR_GREEN") ) { COLOR_HEALTH_BAR_GREEN=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_VARIATION_LIST") ) { DEFAULT_VARIATION_LIST=ioValue.Cast< ::Array< ::String > >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_FREEPLAY_STYLE") ) { DEFAULT_FREEPLAY_STYLE=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"RANK_PERFECT_THRESHOLD") ) { RANK_PERFECT_THRESHOLD=ioValue.Cast< Float >(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"COLOR_PRELOADER_LOCK_BG") ) { COLOR_PRELOADER_LOCK_BG=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"COLOR_PRELOADER_LOCK_FG") ) { COLOR_PRELOADER_LOCK_FG=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_DIFFICULTY_LIST") ) { DEFAULT_DIFFICULTY_LIST=ioValue.Cast< ::Array< ::String > >(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"DEFAULT_PIXEL_NOTE_STYLE") ) { DEFAULT_PIXEL_NOTE_STYLE=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"AUTOSAVE_TIMER_DELAY_SEC") ) { AUTOSAVE_TIMER_DELAY_SEC=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"PRELOADER_MIN_STAGE_TIME") ) { PRELOADER_MIN_STAGE_TIME=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"RANK_EXCELLENT_THRESHOLD") ) { RANK_EXCELLENT_THRESHOLD=ioValue.Cast< Float >(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"COLOR_PRELOADER_LOCK_FONT") ) { COLOR_PRELOADER_LOCK_FONT=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"COLOR_PRELOADER_LOCK_LINK") ) { COLOR_PRELOADER_LOCK_LINK=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"NOTIFICATION_DISMISS_TIME") ) { NOTIFICATION_DISMISS_TIME=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_GHOST_MISS_PENALTY") ) { HEALTH_GHOST_MISS_PENALTY=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"JUDGEMENT_BAD_COMBO_BREAK") ) { JUDGEMENT_BAD_COMBO_BREAK=ioValue.Cast< bool >(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"DEFAULT_TIME_SIGNATURE_NUM") ) { DEFAULT_TIME_SIGNATURE_NUM=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_TIME_SIGNATURE_DEN") ) { DEFAULT_TIME_SIGNATURE_DEN=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"JUDGEMENT_SICK_COMBO_BREAK") ) { JUDGEMENT_SICK_COMBO_BREAK=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"JUDGEMENT_GOOD_COMBO_BREAK") ) { JUDGEMENT_GOOD_COMBO_BREAK=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"JUDGEMENT_SHIT_COMBO_BREAK") ) { JUDGEMENT_SHIT_COMBO_BREAK=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"MAX_PREVIOUS_WORKING_FILES") ) { MAX_PREVIOUS_WORKING_FILES=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"DEFAULT_CAMERA_FOLLOW_RATE") ) { DEFAULT_CAMERA_FOLLOW_RATE=ioValue.Cast< Float >(); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"SCORE_HOLD_BONUS_PER_SECOND") ) { SCORE_HOLD_BONUS_PER_SECOND=ioValue.Cast< Float >(); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"DEFAULT_DIFFICULTY_LIST_FULL") ) { DEFAULT_DIFFICULTY_LIST_FULL=ioValue.Cast< ::Array< ::String > >(); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_HOLD_BONUS_PER_SECOND") ) { HEALTH_HOLD_BONUS_PER_SECOND=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"HEALTH_HOLD_DROP_PENALTY_MAX") ) { HEALTH_HOLD_DROP_PENALTY_MAX=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"JUDGEMENT_KILLER_COMBO_BREAK") ) { JUDGEMENT_KILLER_COMBO_BREAK=ioValue.Cast< bool >(); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"DEFAULT_DIFFICULTY_LIST_ERECT") ) { DEFAULT_DIFFICULTY_LIST_ERECT=ioValue.Cast< ::Array< ::String > >(); return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"HOLD_DROP_PENALTY_THRESHOLD_MS") ) { HOLD_DROP_PENALTY_THRESHOLD_MS=ioValue.Cast< Float >(); return true; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"SCORE_HOLD_DROP_PENALTY_PER_SECOND") ) { SCORE_HOLD_DROP_PENALTY_PER_SECOND=ioValue.Cast< Float >(); return true; }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"HEALTH_HOLD_DROP_PENALTY_PER_SECOND") ) { HEALTH_HOLD_DROP_PENALTY_PER_SECOND=ioValue.Cast< Float >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Constants_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Constants_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &Constants_obj::TITLE,HX_("TITLE",78,4d,29,8e)},
	{::hx::fsString,(void *) &Constants_obj::VERSION_SUFFIX,HX_("VERSION_SUFFIX",78,b4,43,23)},
	{::hx::fsBool,(void *) &Constants_obj::DEBUG_BUILD,HX_("DEBUG_BUILD",c2,0c,58,2c)},
	{::hx::fsString,(void *) &Constants_obj::URL_MERCH_FALLBACK,HX_("URL_MERCH_FALLBACK",b2,56,2a,7e)},
	{::hx::fsObject /* ::Array< ::String > */ ,(void *) &Constants_obj::SITE_LOCK,HX_("SITE_LOCK",e3,f2,db,d4)},
	{::hx::fsString,(void *) &Constants_obj::URL_ITCH,HX_("URL_ITCH",80,01,51,96)},
	{::hx::fsString,(void *) &Constants_obj::URL_NEWGROUNDS,HX_("URL_NEWGROUNDS",dc,bd,43,3b)},
	{::hx::fsString,(void *) &Constants_obj::URL_KICKSTARTER,HX_("URL_KICKSTARTER",f9,31,8a,30)},
	{::hx::fsInt,(void *) &Constants_obj::COLOR_HEALTH_BAR_RED,HX_("COLOR_HEALTH_BAR_RED",3e,0a,08,a4)},
	{::hx::fsInt,(void *) &Constants_obj::COLOR_HEALTH_BAR_GREEN,HX_("COLOR_HEALTH_BAR_GREEN",f0,f8,fd,70)},
	{::hx::fsObject /* ::Array< int > */ ,(void *) &Constants_obj::COLOR_NOTES,HX_("COLOR_NOTES",e5,d8,ed,c2)},
	{::hx::fsInt,(void *) &Constants_obj::COLOR_PRELOADER_BG,HX_("COLOR_PRELOADER_BG",0a,f1,03,31)},
	{::hx::fsInt,(void *) &Constants_obj::COLOR_PRELOADER_BAR,HX_("COLOR_PRELOADER_BAR",ce,f2,6e,b2)},
	{::hx::fsInt,(void *) &Constants_obj::COLOR_PRELOADER_LOCK_BG,HX_("COLOR_PRELOADER_LOCK_BG",74,bf,09,de)},
	{::hx::fsInt,(void *) &Constants_obj::COLOR_PRELOADER_LOCK_FG,HX_("COLOR_PRELOADER_LOCK_FG",f0,c2,09,de)},
	{::hx::fsInt,(void *) &Constants_obj::COLOR_PRELOADER_LOCK_FONT,HX_("COLOR_PRELOADER_LOCK_FONT",3e,b5,3a,c6)},
	{::hx::fsInt,(void *) &Constants_obj::COLOR_PRELOADER_LOCK_LINK,HX_("COLOR_PRELOADER_LOCK_LINK",69,6f,2d,ca)},
	{::hx::fsString,(void *) &Constants_obj::SITE_LOCK_TITLE,HX_("SITE_LOCK_TITLE",dc,53,f6,1e)},
	{::hx::fsString,(void *) &Constants_obj::SITE_LOCK_DESC,HX_("SITE_LOCK_DESC",6d,f8,d1,b1)},
	{::hx::fsString,(void *) &Constants_obj::DEFAULT_DIFFICULTY,HX_("DEFAULT_DIFFICULTY",59,54,f5,70)},
	{::hx::fsObject /* ::Array< ::String > */ ,(void *) &Constants_obj::DEFAULT_DIFFICULTY_LIST,HX_("DEFAULT_DIFFICULTY_LIST",44,49,82,6c)},
	{::hx::fsObject /* ::Array< ::String > */ ,(void *) &Constants_obj::DEFAULT_DIFFICULTY_LIST_ERECT,HX_("DEFAULT_DIFFICULTY_LIST_ERECT",6e,f7,87,51)},
	{::hx::fsObject /* ::Array< ::String > */ ,(void *) &Constants_obj::DEFAULT_DIFFICULTY_LIST_FULL,HX_("DEFAULT_DIFFICULTY_LIST_FULL",aa,6d,70,1b)},
	{::hx::fsString,(void *) &Constants_obj::DEFAULT_CHARACTER,HX_("DEFAULT_CHARACTER",2b,e7,14,33)},
	{::hx::fsString,(void *) &Constants_obj::DEFAULT_HEALTH_ICON,HX_("DEFAULT_HEALTH_ICON",5e,09,aa,29)},
	{::hx::fsString,(void *) &Constants_obj::DEFAULT_STAGE,HX_("DEFAULT_STAGE",40,45,81,f7)},
	{::hx::fsString,(void *) &Constants_obj::DEFAULT_SONG,HX_("DEFAULT_SONG",73,f3,b7,2c)},
	{::hx::fsString,(void *) &Constants_obj::DEFAULT_VARIATION,HX_("DEFAULT_VARIATION",55,87,89,7f)},
	{::hx::fsObject /* ::Array< ::String > */ ,(void *) &Constants_obj::DEFAULT_VARIATION_LIST,HX_("DEFAULT_VARIATION_LIST",c8,c4,67,9f)},
	{::hx::fsString,(void *) &Constants_obj::DEFAULT_STICKER_PACK,HX_("DEFAULT_STICKER_PACK",99,fd,6a,44)},
	{::hx::fsFloat,(void *) &Constants_obj::DEFAULT_BOP_INTENSITY,HX_("DEFAULT_BOP_INTENSITY",99,7a,cb,6c)},
	{::hx::fsInt,(void *) &Constants_obj::DEFAULT_ZOOM_RATE,HX_("DEFAULT_ZOOM_RATE",6e,62,6b,4d)},
	{::hx::fsFloat,(void *) &Constants_obj::DEFAULT_BPM,HX_("DEFAULT_BPM",e1,b0,5e,11)},
	{::hx::fsString,(void *) &Constants_obj::DEFAULT_SONGNAME,HX_("DEFAULT_SONGNAME",3e,63,02,1e)},
	{::hx::fsString,(void *) &Constants_obj::DEFAULT_ARTIST,HX_("DEFAULT_ARTIST",e5,49,f2,4c)},
	{::hx::fsString,(void *) &Constants_obj::DEFAULT_CHARTER,HX_("DEFAULT_CHARTER",cd,4b,fe,6f)},
	{::hx::fsString,(void *) &Constants_obj::DEFAULT_NOTE_STYLE,HX_("DEFAULT_NOTE_STYLE",e2,17,57,de)},
	{::hx::fsString,(void *) &Constants_obj::DEFAULT_FREEPLAY_STYLE,HX_("DEFAULT_FREEPLAY_STYLE",10,76,d5,27)},
	{::hx::fsString,(void *) &Constants_obj::DEFAULT_PIXEL_NOTE_STYLE,HX_("DEFAULT_PIXEL_NOTE_STYLE",db,be,f6,29)},
	{::hx::fsString,(void *) &Constants_obj::DEFAULT_ALBUM_ID,HX_("DEFAULT_ALBUM_ID",e9,4c,77,de)},
	{::hx::fsFloat,(void *) &Constants_obj::DEFAULT_SCROLLSPEED,HX_("DEFAULT_SCROLLSPEED",5c,c4,d7,48)},
	{::hx::fsInt,(void *) &Constants_obj::DEFAULT_TIME_SIGNATURE_NUM,HX_("DEFAULT_TIME_SIGNATURE_NUM",2b,9f,44,09)},
	{::hx::fsInt,(void *) &Constants_obj::DEFAULT_TIME_SIGNATURE_DEN,HX_("DEFAULT_TIME_SIGNATURE_DEN",b2,fa,3c,09)},
	{::hx::fsString,(void *) &Constants_obj::ANIMATION_HOLD_SUFFIX,HX_("ANIMATION_HOLD_SUFFIX",f6,17,d6,bd)},
	{::hx::fsString,(void *) &Constants_obj::ANIMATION_END_SUFFIX,HX_("ANIMATION_END_SUFFIX",d0,0e,81,8e)},
	{::hx::fsFloat,(void *) &Constants_obj::PIXELS_PER_MS,HX_("PIXELS_PER_MS",fa,a2,70,33)},
	{::hx::fsFloat,(void *) &Constants_obj::HIT_WINDOW_MS,HX_("HIT_WINDOW_MS",49,eb,04,94)},
	{::hx::fsInt,(void *) &Constants_obj::SECS_PER_MIN,HX_("SECS_PER_MIN",f3,bc,b4,09)},
	{::hx::fsInt,(void *) &Constants_obj::MS_PER_SEC,HX_("MS_PER_SEC",96,82,9e,7f)},
	{::hx::fsInt,(void *) &Constants_obj::US_PER_MS,HX_("US_PER_MS",e9,ab,a8,f1)},
	{::hx::fsInt,(void *) &Constants_obj::US_PER_SEC,HX_("US_PER_SEC",8e,41,f2,81)},
	{::hx::fsInt,(void *) &Constants_obj::NS_PER_US,HX_("NS_PER_US",da,d3,0e,2d)},
	{::hx::fsInt,(void *) &Constants_obj::NS_PER_MS,HX_("NS_PER_MS",e2,cc,0e,2d)},
	{::hx::fsInt,(void *) &Constants_obj::NS_PER_SEC,HX_("NS_PER_SEC",75,fa,e8,3f)},
	{::hx::fsInt,(void *) &Constants_obj::NOTIFICATION_DISMISS_TIME,HX_("NOTIFICATION_DISMISS_TIME",96,e1,44,0f)},
	{::hx::fsFloat,(void *) &Constants_obj::AUTOSAVE_TIMER_DELAY_SEC,HX_("AUTOSAVE_TIMER_DELAY_SEC",a8,05,5e,eb)},
	{::hx::fsInt,(void *) &Constants_obj::STEPS_PER_BEAT,HX_("STEPS_PER_BEAT",70,22,66,5c)},
	{::hx::fsFloat,(void *) &Constants_obj::MP3_DELAY_MS,HX_("MP3_DELAY_MS",f1,1f,78,14)},
	{::hx::fsFloat,(void *) &Constants_obj::PRELOADER_MIN_STAGE_TIME,HX_("PRELOADER_MIN_STAGE_TIME",84,26,a8,9d)},
	{::hx::fsFloat,(void *) &Constants_obj::HEALTH_MAX,HX_("HEALTH_MAX",21,3e,0b,18)},
	{::hx::fsFloat,(void *) &Constants_obj::HEALTH_STARTING,HX_("HEALTH_STARTING",03,41,e5,db)},
	{::hx::fsFloat,(void *) &Constants_obj::HEALTH_MIN,HX_("HEALTH_MIN",0f,45,0b,18)},
	{::hx::fsFloat,(void *) &Constants_obj::HEALTH_KILLER_BONUS,HX_("HEALTH_KILLER_BONUS",4e,34,1e,ee)},
	{::hx::fsFloat,(void *) &Constants_obj::HEALTH_SICK_BONUS,HX_("HEALTH_SICK_BONUS",01,a3,36,2e)},
	{::hx::fsFloat,(void *) &Constants_obj::HEALTH_GOOD_BONUS,HX_("HEALTH_GOOD_BONUS",c0,94,a8,a7)},
	{::hx::fsFloat,(void *) &Constants_obj::HEALTH_BAD_BONUS,HX_("HEALTH_BAD_BONUS",82,28,12,a2)},
	{::hx::fsFloat,(void *) &Constants_obj::HEALTH_SHIT_BONUS,HX_("HEALTH_SHIT_BONUS",83,13,b5,28)},
	{::hx::fsFloat,(void *) &Constants_obj::HEALTH_HOLD_BONUS_PER_SECOND,HX_("HEALTH_HOLD_BONUS_PER_SECOND",13,f8,18,63)},
	{::hx::fsFloat,(void *) &Constants_obj::HEALTH_MISS_PENALTY,HX_("HEALTH_MISS_PENALTY",a9,f1,79,6e)},
	{::hx::fsFloat,(void *) &Constants_obj::HEALTH_GHOST_MISS_PENALTY,HX_("HEALTH_GHOST_MISS_PENALTY",39,20,ee,5f)},
	{::hx::fsFloat,(void *) &Constants_obj::HEALTH_HOLD_DROP_PENALTY_PER_SECOND,HX_("HEALTH_HOLD_DROP_PENALTY_PER_SECOND",1f,0f,7a,7a)},
	{::hx::fsFloat,(void *) &Constants_obj::HEALTH_HOLD_DROP_PENALTY_MAX,HX_("HEALTH_HOLD_DROP_PENALTY_MAX",3b,6a,ff,df)},
	{::hx::fsFloat,(void *) &Constants_obj::HEALTH_MINE_PENALTY,HX_("HEALTH_MINE_PENALTY",40,dc,d1,23)},
	{::hx::fsFloat,(void *) &Constants_obj::SCORE_HOLD_BONUS_PER_SECOND,HX_("SCORE_HOLD_BONUS_PER_SECOND",29,ef,69,1a)},
	{::hx::fsFloat,(void *) &Constants_obj::SCORE_HOLD_DROP_PENALTY_PER_SECOND,HX_("SCORE_HOLD_DROP_PENALTY_PER_SECOND",c9,c6,9b,e3)},
	{::hx::fsFloat,(void *) &Constants_obj::HOLD_DROP_PENALTY_THRESHOLD_MS,HX_("HOLD_DROP_PENALTY_THRESHOLD_MS",c0,c2,5b,1b)},
	{::hx::fsBool,(void *) &Constants_obj::JUDGEMENT_KILLER_COMBO_BREAK,HX_("JUDGEMENT_KILLER_COMBO_BREAK",44,8d,00,b8)},
	{::hx::fsBool,(void *) &Constants_obj::JUDGEMENT_SICK_COMBO_BREAK,HX_("JUDGEMENT_SICK_COMBO_BREAK",77,7c,a0,87)},
	{::hx::fsBool,(void *) &Constants_obj::JUDGEMENT_GOOD_COMBO_BREAK,HX_("JUDGEMENT_GOOD_COMBO_BREAK",76,c7,20,e7)},
	{::hx::fsBool,(void *) &Constants_obj::JUDGEMENT_BAD_COMBO_BREAK,HX_("JUDGEMENT_BAD_COMBO_BREAK",ca,b2,8f,e3)},
	{::hx::fsBool,(void *) &Constants_obj::JUDGEMENT_SHIT_COMBO_BREAK,HX_("JUDGEMENT_SHIT_COMBO_BREAK",79,3a,79,f6)},
	{::hx::fsFloat,(void *) &Constants_obj::RANK_PERFECT_THRESHOLD,HX_("RANK_PERFECT_THRESHOLD",e6,a7,ed,64)},
	{::hx::fsFloat,(void *) &Constants_obj::RANK_EXCELLENT_THRESHOLD,HX_("RANK_EXCELLENT_THRESHOLD",cf,70,72,69)},
	{::hx::fsFloat,(void *) &Constants_obj::RANK_GREAT_THRESHOLD,HX_("RANK_GREAT_THRESHOLD",e6,fc,b3,f7)},
	{::hx::fsFloat,(void *) &Constants_obj::RANK_GOOD_THRESHOLD,HX_("RANK_GOOD_THRESHOLD",3c,4f,95,69)},
	{::hx::fsString,(void *) &Constants_obj::EXT_CHART,HX_("EXT_CHART",40,9b,fc,e8)},
	{::hx::fsString,(void *) &Constants_obj::EXT_SOUND,HX_("EXT_SOUND",31,8b,15,24)},
	{::hx::fsString,(void *) &Constants_obj::EXT_VIDEO,HX_("EXT_VIDEO",dd,12,45,da)},
	{::hx::fsString,(void *) &Constants_obj::EXT_IMAGE,HX_("EXT_IMAGE",bd,1d,b2,60)},
	{::hx::fsString,(void *) &Constants_obj::EXT_DATA,HX_("EXT_DATA",e8,1d,29,2c)},
	{::hx::fsInt,(void *) &Constants_obj::MAX_PREVIOUS_WORKING_FILES,HX_("MAX_PREVIOUS_WORKING_FILES",3c,b0,bf,b8)},
	{::hx::fsString,(void *) &Constants_obj::LIBRARY_SEPARATOR,HX_("LIBRARY_SEPARATOR",a1,86,80,8c)},
	{::hx::fsFloat,(void *) &Constants_obj::PIXEL_ART_SCALE,HX_("PIXEL_ART_SCALE",d5,31,a0,db)},
	{::hx::fsFloat,(void *) &Constants_obj::COUNTDOWN_VOLUME,HX_("COUNTDOWN_VOLUME",08,cb,09,c2)},
	{::hx::fsFloat,(void *) &Constants_obj::STRUMLINE_X_OFFSET,HX_("STRUMLINE_X_OFFSET",fc,ad,3b,c0)},
	{::hx::fsFloat,(void *) &Constants_obj::STRUMLINE_Y_OFFSET,HX_("STRUMLINE_Y_OFFSET",1b,20,6e,f9)},
	{::hx::fsFloat,(void *) &Constants_obj::DEFAULT_CAMERA_FOLLOW_RATE,HX_("DEFAULT_CAMERA_FOLLOW_RATE",f2,03,6a,11)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Constants_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Constants_obj::TITLE,"TITLE");
	HX_MARK_MEMBER_NAME(Constants_obj::VERSION_SUFFIX,"VERSION_SUFFIX");
	HX_MARK_MEMBER_NAME(Constants_obj::DEBUG_BUILD,"DEBUG_BUILD");
	HX_MARK_MEMBER_NAME(Constants_obj::URL_MERCH_FALLBACK,"URL_MERCH_FALLBACK");
	HX_MARK_MEMBER_NAME(Constants_obj::SITE_LOCK,"SITE_LOCK");
	HX_MARK_MEMBER_NAME(Constants_obj::URL_ITCH,"URL_ITCH");
	HX_MARK_MEMBER_NAME(Constants_obj::URL_NEWGROUNDS,"URL_NEWGROUNDS");
	HX_MARK_MEMBER_NAME(Constants_obj::URL_KICKSTARTER,"URL_KICKSTARTER");
	HX_MARK_MEMBER_NAME(Constants_obj::COLOR_HEALTH_BAR_RED,"COLOR_HEALTH_BAR_RED");
	HX_MARK_MEMBER_NAME(Constants_obj::COLOR_HEALTH_BAR_GREEN,"COLOR_HEALTH_BAR_GREEN");
	HX_MARK_MEMBER_NAME(Constants_obj::COLOR_NOTES,"COLOR_NOTES");
	HX_MARK_MEMBER_NAME(Constants_obj::COLOR_PRELOADER_BG,"COLOR_PRELOADER_BG");
	HX_MARK_MEMBER_NAME(Constants_obj::COLOR_PRELOADER_BAR,"COLOR_PRELOADER_BAR");
	HX_MARK_MEMBER_NAME(Constants_obj::COLOR_PRELOADER_LOCK_BG,"COLOR_PRELOADER_LOCK_BG");
	HX_MARK_MEMBER_NAME(Constants_obj::COLOR_PRELOADER_LOCK_FG,"COLOR_PRELOADER_LOCK_FG");
	HX_MARK_MEMBER_NAME(Constants_obj::COLOR_PRELOADER_LOCK_FONT,"COLOR_PRELOADER_LOCK_FONT");
	HX_MARK_MEMBER_NAME(Constants_obj::COLOR_PRELOADER_LOCK_LINK,"COLOR_PRELOADER_LOCK_LINK");
	HX_MARK_MEMBER_NAME(Constants_obj::SITE_LOCK_TITLE,"SITE_LOCK_TITLE");
	HX_MARK_MEMBER_NAME(Constants_obj::SITE_LOCK_DESC,"SITE_LOCK_DESC");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_DIFFICULTY,"DEFAULT_DIFFICULTY");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_DIFFICULTY_LIST,"DEFAULT_DIFFICULTY_LIST");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_DIFFICULTY_LIST_ERECT,"DEFAULT_DIFFICULTY_LIST_ERECT");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_DIFFICULTY_LIST_FULL,"DEFAULT_DIFFICULTY_LIST_FULL");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_CHARACTER,"DEFAULT_CHARACTER");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_HEALTH_ICON,"DEFAULT_HEALTH_ICON");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_STAGE,"DEFAULT_STAGE");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_SONG,"DEFAULT_SONG");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_VARIATION,"DEFAULT_VARIATION");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_VARIATION_LIST,"DEFAULT_VARIATION_LIST");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_STICKER_PACK,"DEFAULT_STICKER_PACK");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_BOP_INTENSITY,"DEFAULT_BOP_INTENSITY");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_ZOOM_RATE,"DEFAULT_ZOOM_RATE");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_BPM,"DEFAULT_BPM");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_SONGNAME,"DEFAULT_SONGNAME");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_ARTIST,"DEFAULT_ARTIST");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_CHARTER,"DEFAULT_CHARTER");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_NOTE_STYLE,"DEFAULT_NOTE_STYLE");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_FREEPLAY_STYLE,"DEFAULT_FREEPLAY_STYLE");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_PIXEL_NOTE_STYLE,"DEFAULT_PIXEL_NOTE_STYLE");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_ALBUM_ID,"DEFAULT_ALBUM_ID");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_SCROLLSPEED,"DEFAULT_SCROLLSPEED");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_TIME_SIGNATURE_NUM,"DEFAULT_TIME_SIGNATURE_NUM");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_TIME_SIGNATURE_DEN,"DEFAULT_TIME_SIGNATURE_DEN");
	HX_MARK_MEMBER_NAME(Constants_obj::ANIMATION_HOLD_SUFFIX,"ANIMATION_HOLD_SUFFIX");
	HX_MARK_MEMBER_NAME(Constants_obj::ANIMATION_END_SUFFIX,"ANIMATION_END_SUFFIX");
	HX_MARK_MEMBER_NAME(Constants_obj::PIXELS_PER_MS,"PIXELS_PER_MS");
	HX_MARK_MEMBER_NAME(Constants_obj::HIT_WINDOW_MS,"HIT_WINDOW_MS");
	HX_MARK_MEMBER_NAME(Constants_obj::SECS_PER_MIN,"SECS_PER_MIN");
	HX_MARK_MEMBER_NAME(Constants_obj::MS_PER_SEC,"MS_PER_SEC");
	HX_MARK_MEMBER_NAME(Constants_obj::US_PER_MS,"US_PER_MS");
	HX_MARK_MEMBER_NAME(Constants_obj::US_PER_SEC,"US_PER_SEC");
	HX_MARK_MEMBER_NAME(Constants_obj::NS_PER_US,"NS_PER_US");
	HX_MARK_MEMBER_NAME(Constants_obj::NS_PER_MS,"NS_PER_MS");
	HX_MARK_MEMBER_NAME(Constants_obj::NS_PER_SEC,"NS_PER_SEC");
	HX_MARK_MEMBER_NAME(Constants_obj::NOTIFICATION_DISMISS_TIME,"NOTIFICATION_DISMISS_TIME");
	HX_MARK_MEMBER_NAME(Constants_obj::AUTOSAVE_TIMER_DELAY_SEC,"AUTOSAVE_TIMER_DELAY_SEC");
	HX_MARK_MEMBER_NAME(Constants_obj::STEPS_PER_BEAT,"STEPS_PER_BEAT");
	HX_MARK_MEMBER_NAME(Constants_obj::MP3_DELAY_MS,"MP3_DELAY_MS");
	HX_MARK_MEMBER_NAME(Constants_obj::PRELOADER_MIN_STAGE_TIME,"PRELOADER_MIN_STAGE_TIME");
	HX_MARK_MEMBER_NAME(Constants_obj::HEALTH_MAX,"HEALTH_MAX");
	HX_MARK_MEMBER_NAME(Constants_obj::HEALTH_STARTING,"HEALTH_STARTING");
	HX_MARK_MEMBER_NAME(Constants_obj::HEALTH_MIN,"HEALTH_MIN");
	HX_MARK_MEMBER_NAME(Constants_obj::HEALTH_KILLER_BONUS,"HEALTH_KILLER_BONUS");
	HX_MARK_MEMBER_NAME(Constants_obj::HEALTH_SICK_BONUS,"HEALTH_SICK_BONUS");
	HX_MARK_MEMBER_NAME(Constants_obj::HEALTH_GOOD_BONUS,"HEALTH_GOOD_BONUS");
	HX_MARK_MEMBER_NAME(Constants_obj::HEALTH_BAD_BONUS,"HEALTH_BAD_BONUS");
	HX_MARK_MEMBER_NAME(Constants_obj::HEALTH_SHIT_BONUS,"HEALTH_SHIT_BONUS");
	HX_MARK_MEMBER_NAME(Constants_obj::HEALTH_HOLD_BONUS_PER_SECOND,"HEALTH_HOLD_BONUS_PER_SECOND");
	HX_MARK_MEMBER_NAME(Constants_obj::HEALTH_MISS_PENALTY,"HEALTH_MISS_PENALTY");
	HX_MARK_MEMBER_NAME(Constants_obj::HEALTH_GHOST_MISS_PENALTY,"HEALTH_GHOST_MISS_PENALTY");
	HX_MARK_MEMBER_NAME(Constants_obj::HEALTH_HOLD_DROP_PENALTY_PER_SECOND,"HEALTH_HOLD_DROP_PENALTY_PER_SECOND");
	HX_MARK_MEMBER_NAME(Constants_obj::HEALTH_HOLD_DROP_PENALTY_MAX,"HEALTH_HOLD_DROP_PENALTY_MAX");
	HX_MARK_MEMBER_NAME(Constants_obj::HEALTH_MINE_PENALTY,"HEALTH_MINE_PENALTY");
	HX_MARK_MEMBER_NAME(Constants_obj::SCORE_HOLD_BONUS_PER_SECOND,"SCORE_HOLD_BONUS_PER_SECOND");
	HX_MARK_MEMBER_NAME(Constants_obj::SCORE_HOLD_DROP_PENALTY_PER_SECOND,"SCORE_HOLD_DROP_PENALTY_PER_SECOND");
	HX_MARK_MEMBER_NAME(Constants_obj::HOLD_DROP_PENALTY_THRESHOLD_MS,"HOLD_DROP_PENALTY_THRESHOLD_MS");
	HX_MARK_MEMBER_NAME(Constants_obj::JUDGEMENT_KILLER_COMBO_BREAK,"JUDGEMENT_KILLER_COMBO_BREAK");
	HX_MARK_MEMBER_NAME(Constants_obj::JUDGEMENT_SICK_COMBO_BREAK,"JUDGEMENT_SICK_COMBO_BREAK");
	HX_MARK_MEMBER_NAME(Constants_obj::JUDGEMENT_GOOD_COMBO_BREAK,"JUDGEMENT_GOOD_COMBO_BREAK");
	HX_MARK_MEMBER_NAME(Constants_obj::JUDGEMENT_BAD_COMBO_BREAK,"JUDGEMENT_BAD_COMBO_BREAK");
	HX_MARK_MEMBER_NAME(Constants_obj::JUDGEMENT_SHIT_COMBO_BREAK,"JUDGEMENT_SHIT_COMBO_BREAK");
	HX_MARK_MEMBER_NAME(Constants_obj::RANK_PERFECT_THRESHOLD,"RANK_PERFECT_THRESHOLD");
	HX_MARK_MEMBER_NAME(Constants_obj::RANK_EXCELLENT_THRESHOLD,"RANK_EXCELLENT_THRESHOLD");
	HX_MARK_MEMBER_NAME(Constants_obj::RANK_GREAT_THRESHOLD,"RANK_GREAT_THRESHOLD");
	HX_MARK_MEMBER_NAME(Constants_obj::RANK_GOOD_THRESHOLD,"RANK_GOOD_THRESHOLD");
	HX_MARK_MEMBER_NAME(Constants_obj::EXT_CHART,"EXT_CHART");
	HX_MARK_MEMBER_NAME(Constants_obj::EXT_SOUND,"EXT_SOUND");
	HX_MARK_MEMBER_NAME(Constants_obj::EXT_VIDEO,"EXT_VIDEO");
	HX_MARK_MEMBER_NAME(Constants_obj::EXT_IMAGE,"EXT_IMAGE");
	HX_MARK_MEMBER_NAME(Constants_obj::EXT_DATA,"EXT_DATA");
	HX_MARK_MEMBER_NAME(Constants_obj::MAX_PREVIOUS_WORKING_FILES,"MAX_PREVIOUS_WORKING_FILES");
	HX_MARK_MEMBER_NAME(Constants_obj::LIBRARY_SEPARATOR,"LIBRARY_SEPARATOR");
	HX_MARK_MEMBER_NAME(Constants_obj::PIXEL_ART_SCALE,"PIXEL_ART_SCALE");
	HX_MARK_MEMBER_NAME(Constants_obj::COUNTDOWN_VOLUME,"COUNTDOWN_VOLUME");
	HX_MARK_MEMBER_NAME(Constants_obj::STRUMLINE_X_OFFSET,"STRUMLINE_X_OFFSET");
	HX_MARK_MEMBER_NAME(Constants_obj::STRUMLINE_Y_OFFSET,"STRUMLINE_Y_OFFSET");
	HX_MARK_MEMBER_NAME(Constants_obj::DEFAULT_CAMERA_FOLLOW_RATE,"DEFAULT_CAMERA_FOLLOW_RATE");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Constants_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Constants_obj::TITLE,"TITLE");
	HX_VISIT_MEMBER_NAME(Constants_obj::VERSION_SUFFIX,"VERSION_SUFFIX");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEBUG_BUILD,"DEBUG_BUILD");
	HX_VISIT_MEMBER_NAME(Constants_obj::URL_MERCH_FALLBACK,"URL_MERCH_FALLBACK");
	HX_VISIT_MEMBER_NAME(Constants_obj::SITE_LOCK,"SITE_LOCK");
	HX_VISIT_MEMBER_NAME(Constants_obj::URL_ITCH,"URL_ITCH");
	HX_VISIT_MEMBER_NAME(Constants_obj::URL_NEWGROUNDS,"URL_NEWGROUNDS");
	HX_VISIT_MEMBER_NAME(Constants_obj::URL_KICKSTARTER,"URL_KICKSTARTER");
	HX_VISIT_MEMBER_NAME(Constants_obj::COLOR_HEALTH_BAR_RED,"COLOR_HEALTH_BAR_RED");
	HX_VISIT_MEMBER_NAME(Constants_obj::COLOR_HEALTH_BAR_GREEN,"COLOR_HEALTH_BAR_GREEN");
	HX_VISIT_MEMBER_NAME(Constants_obj::COLOR_NOTES,"COLOR_NOTES");
	HX_VISIT_MEMBER_NAME(Constants_obj::COLOR_PRELOADER_BG,"COLOR_PRELOADER_BG");
	HX_VISIT_MEMBER_NAME(Constants_obj::COLOR_PRELOADER_BAR,"COLOR_PRELOADER_BAR");
	HX_VISIT_MEMBER_NAME(Constants_obj::COLOR_PRELOADER_LOCK_BG,"COLOR_PRELOADER_LOCK_BG");
	HX_VISIT_MEMBER_NAME(Constants_obj::COLOR_PRELOADER_LOCK_FG,"COLOR_PRELOADER_LOCK_FG");
	HX_VISIT_MEMBER_NAME(Constants_obj::COLOR_PRELOADER_LOCK_FONT,"COLOR_PRELOADER_LOCK_FONT");
	HX_VISIT_MEMBER_NAME(Constants_obj::COLOR_PRELOADER_LOCK_LINK,"COLOR_PRELOADER_LOCK_LINK");
	HX_VISIT_MEMBER_NAME(Constants_obj::SITE_LOCK_TITLE,"SITE_LOCK_TITLE");
	HX_VISIT_MEMBER_NAME(Constants_obj::SITE_LOCK_DESC,"SITE_LOCK_DESC");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_DIFFICULTY,"DEFAULT_DIFFICULTY");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_DIFFICULTY_LIST,"DEFAULT_DIFFICULTY_LIST");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_DIFFICULTY_LIST_ERECT,"DEFAULT_DIFFICULTY_LIST_ERECT");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_DIFFICULTY_LIST_FULL,"DEFAULT_DIFFICULTY_LIST_FULL");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_CHARACTER,"DEFAULT_CHARACTER");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_HEALTH_ICON,"DEFAULT_HEALTH_ICON");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_STAGE,"DEFAULT_STAGE");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_SONG,"DEFAULT_SONG");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_VARIATION,"DEFAULT_VARIATION");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_VARIATION_LIST,"DEFAULT_VARIATION_LIST");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_STICKER_PACK,"DEFAULT_STICKER_PACK");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_BOP_INTENSITY,"DEFAULT_BOP_INTENSITY");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_ZOOM_RATE,"DEFAULT_ZOOM_RATE");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_BPM,"DEFAULT_BPM");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_SONGNAME,"DEFAULT_SONGNAME");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_ARTIST,"DEFAULT_ARTIST");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_CHARTER,"DEFAULT_CHARTER");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_NOTE_STYLE,"DEFAULT_NOTE_STYLE");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_FREEPLAY_STYLE,"DEFAULT_FREEPLAY_STYLE");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_PIXEL_NOTE_STYLE,"DEFAULT_PIXEL_NOTE_STYLE");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_ALBUM_ID,"DEFAULT_ALBUM_ID");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_SCROLLSPEED,"DEFAULT_SCROLLSPEED");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_TIME_SIGNATURE_NUM,"DEFAULT_TIME_SIGNATURE_NUM");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_TIME_SIGNATURE_DEN,"DEFAULT_TIME_SIGNATURE_DEN");
	HX_VISIT_MEMBER_NAME(Constants_obj::ANIMATION_HOLD_SUFFIX,"ANIMATION_HOLD_SUFFIX");
	HX_VISIT_MEMBER_NAME(Constants_obj::ANIMATION_END_SUFFIX,"ANIMATION_END_SUFFIX");
	HX_VISIT_MEMBER_NAME(Constants_obj::PIXELS_PER_MS,"PIXELS_PER_MS");
	HX_VISIT_MEMBER_NAME(Constants_obj::HIT_WINDOW_MS,"HIT_WINDOW_MS");
	HX_VISIT_MEMBER_NAME(Constants_obj::SECS_PER_MIN,"SECS_PER_MIN");
	HX_VISIT_MEMBER_NAME(Constants_obj::MS_PER_SEC,"MS_PER_SEC");
	HX_VISIT_MEMBER_NAME(Constants_obj::US_PER_MS,"US_PER_MS");
	HX_VISIT_MEMBER_NAME(Constants_obj::US_PER_SEC,"US_PER_SEC");
	HX_VISIT_MEMBER_NAME(Constants_obj::NS_PER_US,"NS_PER_US");
	HX_VISIT_MEMBER_NAME(Constants_obj::NS_PER_MS,"NS_PER_MS");
	HX_VISIT_MEMBER_NAME(Constants_obj::NS_PER_SEC,"NS_PER_SEC");
	HX_VISIT_MEMBER_NAME(Constants_obj::NOTIFICATION_DISMISS_TIME,"NOTIFICATION_DISMISS_TIME");
	HX_VISIT_MEMBER_NAME(Constants_obj::AUTOSAVE_TIMER_DELAY_SEC,"AUTOSAVE_TIMER_DELAY_SEC");
	HX_VISIT_MEMBER_NAME(Constants_obj::STEPS_PER_BEAT,"STEPS_PER_BEAT");
	HX_VISIT_MEMBER_NAME(Constants_obj::MP3_DELAY_MS,"MP3_DELAY_MS");
	HX_VISIT_MEMBER_NAME(Constants_obj::PRELOADER_MIN_STAGE_TIME,"PRELOADER_MIN_STAGE_TIME");
	HX_VISIT_MEMBER_NAME(Constants_obj::HEALTH_MAX,"HEALTH_MAX");
	HX_VISIT_MEMBER_NAME(Constants_obj::HEALTH_STARTING,"HEALTH_STARTING");
	HX_VISIT_MEMBER_NAME(Constants_obj::HEALTH_MIN,"HEALTH_MIN");
	HX_VISIT_MEMBER_NAME(Constants_obj::HEALTH_KILLER_BONUS,"HEALTH_KILLER_BONUS");
	HX_VISIT_MEMBER_NAME(Constants_obj::HEALTH_SICK_BONUS,"HEALTH_SICK_BONUS");
	HX_VISIT_MEMBER_NAME(Constants_obj::HEALTH_GOOD_BONUS,"HEALTH_GOOD_BONUS");
	HX_VISIT_MEMBER_NAME(Constants_obj::HEALTH_BAD_BONUS,"HEALTH_BAD_BONUS");
	HX_VISIT_MEMBER_NAME(Constants_obj::HEALTH_SHIT_BONUS,"HEALTH_SHIT_BONUS");
	HX_VISIT_MEMBER_NAME(Constants_obj::HEALTH_HOLD_BONUS_PER_SECOND,"HEALTH_HOLD_BONUS_PER_SECOND");
	HX_VISIT_MEMBER_NAME(Constants_obj::HEALTH_MISS_PENALTY,"HEALTH_MISS_PENALTY");
	HX_VISIT_MEMBER_NAME(Constants_obj::HEALTH_GHOST_MISS_PENALTY,"HEALTH_GHOST_MISS_PENALTY");
	HX_VISIT_MEMBER_NAME(Constants_obj::HEALTH_HOLD_DROP_PENALTY_PER_SECOND,"HEALTH_HOLD_DROP_PENALTY_PER_SECOND");
	HX_VISIT_MEMBER_NAME(Constants_obj::HEALTH_HOLD_DROP_PENALTY_MAX,"HEALTH_HOLD_DROP_PENALTY_MAX");
	HX_VISIT_MEMBER_NAME(Constants_obj::HEALTH_MINE_PENALTY,"HEALTH_MINE_PENALTY");
	HX_VISIT_MEMBER_NAME(Constants_obj::SCORE_HOLD_BONUS_PER_SECOND,"SCORE_HOLD_BONUS_PER_SECOND");
	HX_VISIT_MEMBER_NAME(Constants_obj::SCORE_HOLD_DROP_PENALTY_PER_SECOND,"SCORE_HOLD_DROP_PENALTY_PER_SECOND");
	HX_VISIT_MEMBER_NAME(Constants_obj::HOLD_DROP_PENALTY_THRESHOLD_MS,"HOLD_DROP_PENALTY_THRESHOLD_MS");
	HX_VISIT_MEMBER_NAME(Constants_obj::JUDGEMENT_KILLER_COMBO_BREAK,"JUDGEMENT_KILLER_COMBO_BREAK");
	HX_VISIT_MEMBER_NAME(Constants_obj::JUDGEMENT_SICK_COMBO_BREAK,"JUDGEMENT_SICK_COMBO_BREAK");
	HX_VISIT_MEMBER_NAME(Constants_obj::JUDGEMENT_GOOD_COMBO_BREAK,"JUDGEMENT_GOOD_COMBO_BREAK");
	HX_VISIT_MEMBER_NAME(Constants_obj::JUDGEMENT_BAD_COMBO_BREAK,"JUDGEMENT_BAD_COMBO_BREAK");
	HX_VISIT_MEMBER_NAME(Constants_obj::JUDGEMENT_SHIT_COMBO_BREAK,"JUDGEMENT_SHIT_COMBO_BREAK");
	HX_VISIT_MEMBER_NAME(Constants_obj::RANK_PERFECT_THRESHOLD,"RANK_PERFECT_THRESHOLD");
	HX_VISIT_MEMBER_NAME(Constants_obj::RANK_EXCELLENT_THRESHOLD,"RANK_EXCELLENT_THRESHOLD");
	HX_VISIT_MEMBER_NAME(Constants_obj::RANK_GREAT_THRESHOLD,"RANK_GREAT_THRESHOLD");
	HX_VISIT_MEMBER_NAME(Constants_obj::RANK_GOOD_THRESHOLD,"RANK_GOOD_THRESHOLD");
	HX_VISIT_MEMBER_NAME(Constants_obj::EXT_CHART,"EXT_CHART");
	HX_VISIT_MEMBER_NAME(Constants_obj::EXT_SOUND,"EXT_SOUND");
	HX_VISIT_MEMBER_NAME(Constants_obj::EXT_VIDEO,"EXT_VIDEO");
	HX_VISIT_MEMBER_NAME(Constants_obj::EXT_IMAGE,"EXT_IMAGE");
	HX_VISIT_MEMBER_NAME(Constants_obj::EXT_DATA,"EXT_DATA");
	HX_VISIT_MEMBER_NAME(Constants_obj::MAX_PREVIOUS_WORKING_FILES,"MAX_PREVIOUS_WORKING_FILES");
	HX_VISIT_MEMBER_NAME(Constants_obj::LIBRARY_SEPARATOR,"LIBRARY_SEPARATOR");
	HX_VISIT_MEMBER_NAME(Constants_obj::PIXEL_ART_SCALE,"PIXEL_ART_SCALE");
	HX_VISIT_MEMBER_NAME(Constants_obj::COUNTDOWN_VOLUME,"COUNTDOWN_VOLUME");
	HX_VISIT_MEMBER_NAME(Constants_obj::STRUMLINE_X_OFFSET,"STRUMLINE_X_OFFSET");
	HX_VISIT_MEMBER_NAME(Constants_obj::STRUMLINE_Y_OFFSET,"STRUMLINE_Y_OFFSET");
	HX_VISIT_MEMBER_NAME(Constants_obj::DEFAULT_CAMERA_FOLLOW_RATE,"DEFAULT_CAMERA_FOLLOW_RATE");
};

#endif

::hx::Class Constants_obj::__mClass;

static ::String Constants_obj_sStaticFields[] = {
	HX_("TITLE",78,4d,29,8e),
	HX_("get_GENERATED_BY",70,ec,61,cd),
	HX_("VERSION_SUFFIX",78,b4,43,23),
	HX_("get_VERSION",0f,1b,c0,82),
	HX_("DEBUG_BUILD",c2,0c,58,2c),
	HX_("URL_MERCH_FALLBACK",b2,56,2a,7e),
	HX_("SITE_LOCK",e3,f2,db,d4),
	HX_("URL_ITCH",80,01,51,96),
	HX_("URL_NEWGROUNDS",dc,bd,43,3b),
	HX_("URL_KICKSTARTER",f9,31,8a,30),
	HX_("COLOR_HEALTH_BAR_RED",3e,0a,08,a4),
	HX_("COLOR_HEALTH_BAR_GREEN",f0,f8,fd,70),
	HX_("COLOR_NOTES",e5,d8,ed,c2),
	HX_("COLOR_PRELOADER_BG",0a,f1,03,31),
	HX_("COLOR_PRELOADER_BAR",ce,f2,6e,b2),
	HX_("COLOR_PRELOADER_LOCK_BG",74,bf,09,de),
	HX_("COLOR_PRELOADER_LOCK_FG",f0,c2,09,de),
	HX_("COLOR_PRELOADER_LOCK_FONT",3e,b5,3a,c6),
	HX_("COLOR_PRELOADER_LOCK_LINK",69,6f,2d,ca),
	HX_("SITE_LOCK_TITLE",dc,53,f6,1e),
	HX_("SITE_LOCK_DESC",6d,f8,d1,b1),
	HX_("DEFAULT_DIFFICULTY",59,54,f5,70),
	HX_("DEFAULT_DIFFICULTY_LIST",44,49,82,6c),
	HX_("DEFAULT_DIFFICULTY_LIST_ERECT",6e,f7,87,51),
	HX_("DEFAULT_DIFFICULTY_LIST_FULL",aa,6d,70,1b),
	HX_("DEFAULT_CHARACTER",2b,e7,14,33),
	HX_("DEFAULT_HEALTH_ICON",5e,09,aa,29),
	HX_("DEFAULT_STAGE",40,45,81,f7),
	HX_("DEFAULT_SONG",73,f3,b7,2c),
	HX_("DEFAULT_VARIATION",55,87,89,7f),
	HX_("DEFAULT_VARIATION_LIST",c8,c4,67,9f),
	HX_("DEFAULT_STICKER_PACK",99,fd,6a,44),
	HX_("DEFAULT_BOP_INTENSITY",99,7a,cb,6c),
	HX_("DEFAULT_ZOOM_RATE",6e,62,6b,4d),
	HX_("DEFAULT_BPM",e1,b0,5e,11),
	HX_("DEFAULT_SONGNAME",3e,63,02,1e),
	HX_("DEFAULT_ARTIST",e5,49,f2,4c),
	HX_("DEFAULT_CHARTER",cd,4b,fe,6f),
	HX_("DEFAULT_NOTE_STYLE",e2,17,57,de),
	HX_("DEFAULT_FREEPLAY_STYLE",10,76,d5,27),
	HX_("DEFAULT_PIXEL_NOTE_STYLE",db,be,f6,29),
	HX_("DEFAULT_ALBUM_ID",e9,4c,77,de),
	HX_("DEFAULT_SCROLLSPEED",5c,c4,d7,48),
	HX_("DEFAULT_TIME_SIGNATURE_NUM",2b,9f,44,09),
	HX_("DEFAULT_TIME_SIGNATURE_DEN",b2,fa,3c,09),
	HX_("ANIMATION_HOLD_SUFFIX",f6,17,d6,bd),
	HX_("ANIMATION_END_SUFFIX",d0,0e,81,8e),
	HX_("PIXELS_PER_MS",fa,a2,70,33),
	HX_("HIT_WINDOW_MS",49,eb,04,94),
	HX_("SECS_PER_MIN",f3,bc,b4,09),
	HX_("MS_PER_SEC",96,82,9e,7f),
	HX_("US_PER_MS",e9,ab,a8,f1),
	HX_("US_PER_SEC",8e,41,f2,81),
	HX_("NS_PER_US",da,d3,0e,2d),
	HX_("NS_PER_MS",e2,cc,0e,2d),
	HX_("NS_PER_SEC",75,fa,e8,3f),
	HX_("NOTIFICATION_DISMISS_TIME",96,e1,44,0f),
	HX_("AUTOSAVE_TIMER_DELAY_SEC",a8,05,5e,eb),
	HX_("STEPS_PER_BEAT",70,22,66,5c),
	HX_("MP3_DELAY_MS",f1,1f,78,14),
	HX_("PRELOADER_MIN_STAGE_TIME",84,26,a8,9d),
	HX_("HEALTH_MAX",21,3e,0b,18),
	HX_("HEALTH_STARTING",03,41,e5,db),
	HX_("HEALTH_MIN",0f,45,0b,18),
	HX_("HEALTH_KILLER_BONUS",4e,34,1e,ee),
	HX_("HEALTH_SICK_BONUS",01,a3,36,2e),
	HX_("HEALTH_GOOD_BONUS",c0,94,a8,a7),
	HX_("HEALTH_BAD_BONUS",82,28,12,a2),
	HX_("HEALTH_SHIT_BONUS",83,13,b5,28),
	HX_("HEALTH_HOLD_BONUS_PER_SECOND",13,f8,18,63),
	HX_("HEALTH_MISS_PENALTY",a9,f1,79,6e),
	HX_("HEALTH_GHOST_MISS_PENALTY",39,20,ee,5f),
	HX_("HEALTH_HOLD_DROP_PENALTY_PER_SECOND",1f,0f,7a,7a),
	HX_("HEALTH_HOLD_DROP_PENALTY_MAX",3b,6a,ff,df),
	HX_("HEALTH_MINE_PENALTY",40,dc,d1,23),
	HX_("SCORE_HOLD_BONUS_PER_SECOND",29,ef,69,1a),
	HX_("SCORE_HOLD_DROP_PENALTY_PER_SECOND",c9,c6,9b,e3),
	HX_("HOLD_DROP_PENALTY_THRESHOLD_MS",c0,c2,5b,1b),
	HX_("JUDGEMENT_KILLER_COMBO_BREAK",44,8d,00,b8),
	HX_("JUDGEMENT_SICK_COMBO_BREAK",77,7c,a0,87),
	HX_("JUDGEMENT_GOOD_COMBO_BREAK",76,c7,20,e7),
	HX_("JUDGEMENT_BAD_COMBO_BREAK",ca,b2,8f,e3),
	HX_("JUDGEMENT_SHIT_COMBO_BREAK",79,3a,79,f6),
	HX_("RANK_PERFECT_THRESHOLD",e6,a7,ed,64),
	HX_("RANK_EXCELLENT_THRESHOLD",cf,70,72,69),
	HX_("RANK_GREAT_THRESHOLD",e6,fc,b3,f7),
	HX_("RANK_GOOD_THRESHOLD",3c,4f,95,69),
	HX_("EXT_CHART",40,9b,fc,e8),
	HX_("EXT_SOUND",31,8b,15,24),
	HX_("EXT_VIDEO",dd,12,45,da),
	HX_("EXT_IMAGE",bd,1d,b2,60),
	HX_("EXT_DATA",e8,1d,29,2c),
	HX_("MAX_PREVIOUS_WORKING_FILES",3c,b0,bf,b8),
	HX_("LIBRARY_SEPARATOR",a1,86,80,8c),
	HX_("PIXEL_ART_SCALE",d5,31,a0,db),
	HX_("COUNTDOWN_VOLUME",08,cb,09,c2),
	HX_("STRUMLINE_X_OFFSET",fc,ad,3b,c0),
	HX_("STRUMLINE_Y_OFFSET",1b,20,6e,f9),
	HX_("DEFAULT_CAMERA_FOLLOW_RATE",f2,03,6a,11),
	::String(null())
};

void Constants_obj::__register()
{
	Constants_obj _hx_dummy;
	Constants_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("funkin.util.Constants",a0,30,00,e1);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Constants_obj::__GetStatic;
	__mClass->mSetStaticField = &Constants_obj::__SetStatic;
	__mClass->mMarkFunc = Constants_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Constants_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Constants_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Constants_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Constants_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Constants_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Constants_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_22_boot)
HXDLIN(  22)		TITLE = HX_("Friday Night Funkin'",6d,d3,c2,da);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_44_boot)
HXDLIN(  44)		VERSION_SUFFIX = HX_("",00,00,00,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_61_boot)
HXDLIN(  61)		DEBUG_BUILD = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_72_boot)
HXDLIN(  72)		URL_MERCH_FALLBACK = HX_("https://needlejuicerecords.com/en-ca/pages/friday-night-funkin",20,cb,b8,7d);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_79_boot)
HXDLIN(  79)		SITE_LOCK = ::Array_obj< ::String >::fromData( _hx_array_data_e10030a0_7,2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_87_boot)
HXDLIN(  87)		URL_ITCH = HX_("https://ninja-muffin24.itch.io/funkin",69,b0,72,92);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_92_boot)
HXDLIN(  92)		URL_NEWGROUNDS = HX_("https://www.newgrounds.com/portal/view/770371",4e,b1,8b,f3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_97_boot)
HXDLIN(  97)		URL_KICKSTARTER = HX_("https://www.kickstarter.com/projects/funkin/friday-night-funkin-the-full-ass-game/",ea,c2,ed,42);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_129_boot)
HXDLIN( 129)		COLOR_HEALTH_BAR_RED = -65536;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_134_boot)
HXDLIN( 134)		COLOR_HEALTH_BAR_GREEN = -10027213;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_139_boot)
HXDLIN( 139)		COLOR_NOTES = ::Array_obj< int >::fromData( _hx_array_data_e10030a0_14,4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_149_boot)
HXDLIN( 149)		COLOR_PRELOADER_BG = -16777216;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_154_boot)
HXDLIN( 154)		COLOR_PRELOADER_BAR = -5964015;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_159_boot)
HXDLIN( 159)		COLOR_PRELOADER_LOCK_BG = -15001833;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_164_boot)
HXDLIN( 164)		COLOR_PRELOADER_LOCK_FG = 12152592;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_169_boot)
HXDLIN( 169)		COLOR_PRELOADER_LOCK_FONT = 13421772;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_174_boot)
HXDLIN( 174)		COLOR_PRELOADER_LOCK_LINK = 15643153;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_180_boot)
HXDLIN( 180)		SITE_LOCK_TITLE = HX_("You Loser!",e5,94,37,40);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_182_boot)
HXDLIN( 182)		SITE_LOCK_DESC = HX_("This isn't Newgrounds!\nGo play Friday Night Funkin' on Newgrounds:",66,f3,a6,54);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_192_boot)
HXDLIN( 192)		DEFAULT_DIFFICULTY = HX_("normal",27,72,69,30);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_198_boot)
HXDLIN( 198)		DEFAULT_DIFFICULTY_LIST = ::Array_obj< ::String >::fromData( _hx_array_data_e10030a0_25,3);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_203_boot)
HXDLIN( 203)		DEFAULT_DIFFICULTY_LIST_ERECT = ::Array_obj< ::String >::fromData( _hx_array_data_e10030a0_27,2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_209_boot)
HXDLIN( 209)		DEFAULT_DIFFICULTY_LIST_FULL = ::Array_obj< ::String >::fromData( _hx_array_data_e10030a0_29,5);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_214_boot)
HXDLIN( 214)		DEFAULT_CHARACTER = HX_("bf",c4,55,00,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_219_boot)
HXDLIN( 219)		DEFAULT_HEALTH_ICON = HX_("face",9d,b4,b5,43);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_224_boot)
HXDLIN( 224)		DEFAULT_STAGE = HX_("mainStage",c5,33,af,9d);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_229_boot)
HXDLIN( 229)		DEFAULT_SONG = HX_("tutorial",9e,8f,b5,82);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_234_boot)
HXDLIN( 234)		DEFAULT_VARIATION = HX_("default",c1,d8,c3,9b);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_239_boot)
HXDLIN( 239)		DEFAULT_VARIATION_LIST = ::Array_obj< ::String >::fromData( _hx_array_data_e10030a0_36,4);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_244_boot)
HXDLIN( 244)		DEFAULT_STICKER_PACK = HX_("default",c1,d8,c3,9b);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_250_boot)
HXDLIN( 250)		DEFAULT_BOP_INTENSITY = ((Float)1.015);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_255_boot)
HXDLIN( 255)		DEFAULT_ZOOM_RATE = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_260_boot)
HXDLIN( 260)		DEFAULT_BPM = ((Float)100.0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_265_boot)
HXDLIN( 265)		DEFAULT_SONGNAME = HX_("Unknown",6a,4b,cc,ae);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_270_boot)
HXDLIN( 270)		DEFAULT_ARTIST = HX_("Unknown",6a,4b,cc,ae);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_275_boot)
HXDLIN( 275)		DEFAULT_CHARTER = HX_("Unknown",6a,4b,cc,ae);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_280_boot)
HXDLIN( 280)		DEFAULT_NOTE_STYLE = HX_("funkin",31,b2,4f,6f);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_285_boot)
HXDLIN( 285)		DEFAULT_FREEPLAY_STYLE = HX_("bf",c4,55,00,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_290_boot)
HXDLIN( 290)		DEFAULT_PIXEL_NOTE_STYLE = HX_("pixel",86,c6,a3,c2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_295_boot)
HXDLIN( 295)		DEFAULT_ALBUM_ID = HX_("volume1",17,75,71,09);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_305_boot)
HXDLIN( 305)		DEFAULT_SCROLLSPEED = ((Float)1.0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_310_boot)
HXDLIN( 310)		DEFAULT_TIME_SIGNATURE_NUM = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_315_boot)
HXDLIN( 315)		DEFAULT_TIME_SIGNATURE_DEN = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_325_boot)
HXDLIN( 325)		ANIMATION_HOLD_SUFFIX = HX_("-hold",ec,e3,1a,2e);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_330_boot)
HXDLIN( 330)		ANIMATION_END_SUFFIX = HX_("-end",ce,9d,0b,1e);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_340_boot)
HXDLIN( 340)		PIXELS_PER_MS = ((Float)0.45);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_345_boot)
HXDLIN( 345)		HIT_WINDOW_MS = ((Float)160.0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_352_boot)
HXDLIN( 352)		SECS_PER_MIN = 60;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_357_boot)
HXDLIN( 357)		MS_PER_SEC = 1000;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_362_boot)
HXDLIN( 362)		US_PER_MS = 1000;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_367_boot)
HXDLIN( 367)		US_PER_SEC = (::funkin::util::Constants_obj::US_PER_MS * ::funkin::util::Constants_obj::MS_PER_SEC);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_372_boot)
HXDLIN( 372)		NS_PER_US = 1000;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_377_boot)
HXDLIN( 377)		NS_PER_MS = (::funkin::util::Constants_obj::NS_PER_US * ::funkin::util::Constants_obj::US_PER_MS);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_382_boot)
HXDLIN( 382)		NS_PER_SEC = ((::funkin::util::Constants_obj::NS_PER_US * ::funkin::util::Constants_obj::US_PER_MS) * ::funkin::util::Constants_obj::MS_PER_SEC);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_387_boot)
HXDLIN( 387)		NOTIFICATION_DISMISS_TIME = (5 * ::funkin::util::Constants_obj::MS_PER_SEC);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_392_boot)
HXDLIN( 392)		AUTOSAVE_TIMER_DELAY_SEC = (((Float)5.0) * ( (Float)(::funkin::util::Constants_obj::SECS_PER_MIN) ));
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_398_boot)
HXDLIN( 398)		STEPS_PER_BEAT = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_404_boot)
HXDLIN( 404)		MP3_DELAY_MS = (((Float)0.0119727891156462592) * ( (Float)(::funkin::util::Constants_obj::MS_PER_SEC) ));
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_413_boot)
HXDLIN( 413)		PRELOADER_MIN_STAGE_TIME = ((Float)0.1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_424_boot)
HXDLIN( 424)		HEALTH_MAX = ((Float)2.0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_429_boot)
HXDLIN( 429)		HEALTH_STARTING = (::funkin::util::Constants_obj::HEALTH_MAX / ((Float)2.0));
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_435_boot)
HXDLIN( 435)		HEALTH_MIN = ((Float)0.0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_440_boot)
HXDLIN( 440)		HEALTH_KILLER_BONUS = (((Float)0.02) * ::funkin::util::Constants_obj::HEALTH_MAX);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_445_boot)
HXDLIN( 445)		HEALTH_SICK_BONUS = (((Float)0.015) * ::funkin::util::Constants_obj::HEALTH_MAX);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_450_boot)
HXDLIN( 450)		HEALTH_GOOD_BONUS = (((Float)0.0075) * ::funkin::util::Constants_obj::HEALTH_MAX);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_455_boot)
HXDLIN( 455)		HEALTH_BAD_BONUS = (((Float)0.) * ::funkin::util::Constants_obj::HEALTH_MAX);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_461_boot)
HXDLIN( 461)		HEALTH_SHIT_BONUS = (((Float)-0.01) * ::funkin::util::Constants_obj::HEALTH_MAX);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_466_boot)
HXDLIN( 466)		HEALTH_HOLD_BONUS_PER_SECOND = (((Float)0.06) * ::funkin::util::Constants_obj::HEALTH_MAX);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_471_boot)
HXDLIN( 471)		HEALTH_MISS_PENALTY = (((Float)-0.04) * ::funkin::util::Constants_obj::HEALTH_MAX);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_476_boot)
HXDLIN( 476)		HEALTH_GHOST_MISS_PENALTY = (((Float)-0.04) * ::funkin::util::Constants_obj::HEALTH_MAX);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_481_boot)
HXDLIN( 481)		HEALTH_HOLD_DROP_PENALTY_PER_SECOND = (((Float)0.) * ::funkin::util::Constants_obj::HEALTH_MAX);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_486_boot)
HXDLIN( 486)		HEALTH_HOLD_DROP_PENALTY_MAX = (((Float)0.) * ::funkin::util::Constants_obj::HEALTH_MAX);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_491_boot)
HXDLIN( 491)		HEALTH_MINE_PENALTY = (((Float)-0.15) * ::funkin::util::Constants_obj::HEALTH_MAX);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_502_boot)
HXDLIN( 502)		SCORE_HOLD_BONUS_PER_SECOND = ((Float)250.0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_507_boot)
HXDLIN( 507)		SCORE_HOLD_DROP_PENALTY_PER_SECOND = ((Float)-125.0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_512_boot)
HXDLIN( 512)		HOLD_DROP_PENALTY_THRESHOLD_MS = ((Float)160.0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_514_boot)
HXDLIN( 514)		JUDGEMENT_KILLER_COMBO_BREAK = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_515_boot)
HXDLIN( 515)		JUDGEMENT_SICK_COMBO_BREAK = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_516_boot)
HXDLIN( 516)		JUDGEMENT_GOOD_COMBO_BREAK = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_517_boot)
HXDLIN( 517)		JUDGEMENT_BAD_COMBO_BREAK = true;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_518_boot)
HXDLIN( 518)		JUDGEMENT_SHIT_COMBO_BREAK = true;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_521_boot)
HXDLIN( 521)		RANK_PERFECT_THRESHOLD = ((Float)1.00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_522_boot)
HXDLIN( 522)		RANK_EXCELLENT_THRESHOLD = ((Float)0.90);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_523_boot)
HXDLIN( 523)		RANK_GREAT_THRESHOLD = ((Float)0.80);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_524_boot)
HXDLIN( 524)		RANK_GOOD_THRESHOLD = ((Float)0.60);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_538_boot)
HXDLIN( 538)		EXT_CHART = HX_("fnfc",85,94,bf,43);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_543_boot)
HXDLIN( 543)		EXT_SOUND = HX_("ogg",4f,94,54,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_548_boot)
HXDLIN( 548)		EXT_VIDEO = HX_("mp4",71,17,53,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_553_boot)
HXDLIN( 553)		EXT_IMAGE = HX_("png",a9,5c,55,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_558_boot)
HXDLIN( 558)		EXT_DATA = HX_("json",28,42,68,46);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_578_boot)
HXDLIN( 578)		MAX_PREVIOUS_WORKING_FILES = 10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_583_boot)
HXDLIN( 583)		LIBRARY_SEPARATOR = HX_(":",3a,00,00,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_588_boot)
HXDLIN( 588)		PIXEL_ART_SCALE = ((Float)6);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_593_boot)
HXDLIN( 593)		COUNTDOWN_VOLUME = ((Float)0.6);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_598_boot)
HXDLIN( 598)		STRUMLINE_X_OFFSET = ((Float)48);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_603_boot)
HXDLIN( 603)		STRUMLINE_Y_OFFSET = ((Float)24);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1738cc3fe3b2e2c8_609_boot)
HXDLIN( 609)		DEFAULT_CAMERA_FOLLOW_RATE = ((Float)0.04);
            	}
}

} // end namespace funkin
} // end namespace util
