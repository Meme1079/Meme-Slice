// Generated by Haxe 4.3.7
#ifndef INCLUDED_cutscenes_Conversation
#define INCLUDED_cutscenes_Conversation

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
HX_DECLARE_CLASS1(cutscenes,Conversation)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS3(flixel,addons,text,FlxTypeText)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)

namespace cutscenes{


class HXCPP_CLASS_ATTRIBUTES Conversation_obj : public  ::flixel::group::FlxTypedSpriteGroup_obj
{
	public:
		typedef  ::flixel::group::FlxTypedSpriteGroup_obj super;
		typedef Conversation_obj OBJ_;
		Conversation_obj();

	public:
		enum { _hx_ClassId = 0x6c105e0c };

		void __construct( ::Dynamic conversation);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="cutscenes.Conversation")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"cutscenes.Conversation"); }
		static ::hx::ObjectPtr< Conversation_obj > __new( ::Dynamic conversation);
		static ::hx::ObjectPtr< Conversation_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic conversation);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Conversation_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Conversation",a3,93,2b,28); }

		static  ::Dynamic dialogueParse(::String path);
		static ::Dynamic dialogueParse_dyn();

		static  ::Dynamic dialogueTemplate();
		static ::Dynamic dialogueTemplate_dyn();

		 ::flixel::addons::text::FlxTypeText convDialogue;
		::Array< ::Dynamic> convTextContent;
		::Array< ::Dynamic> convTextLength;
		int pageIndex;
		int textIndex;
		int textIndexLength;
		::Array< int > textIndexLengthList;
		bool dialogueOpened;
		bool dialogueStarted;
		bool dialoguePaused;
		bool dialogueEnded;
		void textLengthList(::Array< ::String > dialogues,::String lines);
		::Dynamic textLengthList_dyn();

		void update(Float elapsed);

		void dialogueStart();
		::Dynamic dialogueStart_dyn();

		void dialogueContinue();
		::Dynamic dialogueContinue_dyn();

};

} // end namespace cutscenes

#endif /* INCLUDED_cutscenes_Conversation */ 
