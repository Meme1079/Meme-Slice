// Generated by Haxe 4.3.7
#ifndef INCLUDED_funkin_transition_VFDOverlay
#define INCLUDED_funkin_transition_VFDOverlay

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_GraphicsShader
#include <openfl/display/GraphicsShader.h>
#endif
HX_DECLARE_CLASS2(funkin,transition,VFDOverlay)
HX_DECLARE_CLASS2(openfl,display,GraphicsShader)
HX_DECLARE_CLASS2(openfl,display,Shader)
HX_DECLARE_CLASS2(openfl,display,ShaderParameter_Float)

namespace funkin{
namespace transition{


class HXCPP_CLASS_ATTRIBUTES VFDOverlay_obj : public  ::openfl::display::GraphicsShader_obj
{
	public:
		typedef  ::openfl::display::GraphicsShader_obj super;
		typedef VFDOverlay_obj OBJ_;
		VFDOverlay_obj();

	public:
		enum { _hx_ClassId = 0x497f668e };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="funkin.transition.VFDOverlay")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"funkin.transition.VFDOverlay"); }
		static ::hx::ObjectPtr< VFDOverlay_obj > __new();
		static ::hx::ObjectPtr< VFDOverlay_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~VFDOverlay_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("VFDOverlay",dc,b6,ce,ee); }

		Float elapsedTime;
		Float set_elapsedTime(Float value);
		::Dynamic set_elapsedTime_dyn();

		void update(Float elapsed);
		::Dynamic update_dyn();

		 ::openfl::display::ShaderParameter_Float u_time;
};

} // end namespace funkin
} // end namespace transition

#endif /* INCLUDED_funkin_transition_VFDOverlay */ 
