// Generated by Haxe 4.3.7
#ifndef INCLUDED_funkin_vis_dsp_MathType
#define INCLUDED_funkin_vis_dsp_MathType

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(funkin,vis,dsp,MathType)
namespace funkin{
namespace vis{
namespace dsp{


class MathType_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef MathType_obj OBJ_;

	public:
		MathType_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("funkin.vis.dsp.MathType",fa,ee,1b,e4); }
		::String __ToString() const { return HX_("MathType.",2c,09,8a,39) + _hx_tag; }

		static ::funkin::vis::dsp::MathType Cast;
		static inline ::funkin::vis::dsp::MathType Cast_dyn() { return Cast; }
		static ::funkin::vis::dsp::MathType Ceil;
		static inline ::funkin::vis::dsp::MathType Ceil_dyn() { return Ceil; }
		static ::funkin::vis::dsp::MathType Floor;
		static inline ::funkin::vis::dsp::MathType Floor_dyn() { return Floor; }
		static ::funkin::vis::dsp::MathType Round;
		static inline ::funkin::vis::dsp::MathType Round_dyn() { return Round; }
};

} // end namespace funkin
} // end namespace vis
} // end namespace dsp

#endif /* INCLUDED_funkin_vis_dsp_MathType */ 
