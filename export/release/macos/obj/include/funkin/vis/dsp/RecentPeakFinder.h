// Generated by Haxe 4.3.7
#ifndef INCLUDED_funkin_vis_dsp_RecentPeakFinder
#define INCLUDED_funkin_vis_dsp_RecentPeakFinder

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(funkin,vis,dsp,RecentPeakFinder)

namespace funkin{
namespace vis{
namespace dsp{


class HXCPP_CLASS_ATTRIBUTES RecentPeakFinder_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef RecentPeakFinder_obj OBJ_;
		RecentPeakFinder_obj();

	public:
		enum { _hx_ClassId = 0x3b8ff092 };

		void __construct(::hx::Null< int >  __o_length);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="funkin.vis.dsp.RecentPeakFinder")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"funkin.vis.dsp.RecentPeakFinder"); }
		static ::hx::ObjectPtr< RecentPeakFinder_obj > __new(::hx::Null< int >  __o_length);
		static ::hx::ObjectPtr< RecentPeakFinder_obj > __alloc(::hx::Ctx *_hx_ctx,::hx::Null< int >  __o_length);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~RecentPeakFinder_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("RecentPeakFinder",00,49,df,20); }

		::Array< Float > buffer;
		int bufferIndex;
		Float peak;
		void push(Float value);
		::Dynamic push_dyn();

		Float get_lastValue();
		::Dynamic get_lastValue_dyn();

};

} // end namespace funkin
} // end namespace vis
} // end namespace dsp

#endif /* INCLUDED_funkin_vis_dsp_RecentPeakFinder */ 
