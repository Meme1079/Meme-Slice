// Generated by Haxe 4.3.7
#ifndef INCLUDED_funkin_vis_dsp__OffsetArray_OffsetArrayIterator
#define INCLUDED_funkin_vis_dsp__OffsetArray_OffsetArrayIterator

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_98b10ae30f37bbfc_65_new)
HX_DECLARE_CLASS4(funkin,vis,dsp,_OffsetArray,OffsetArrayIterator)

namespace funkin{
namespace vis{
namespace dsp{
namespace _OffsetArray{


class HXCPP_CLASS_ATTRIBUTES OffsetArrayIterator_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef OffsetArrayIterator_obj OBJ_;
		OffsetArrayIterator_obj();

	public:
		enum { _hx_ClassId = 0x1988441b };

		void __construct(::cpp::VirtualArray array,int offset);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="funkin.vis.dsp._OffsetArray.OffsetArrayIterator")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"funkin.vis.dsp._OffsetArray.OffsetArrayIterator"); }

		inline static ::hx::ObjectPtr< OffsetArrayIterator_obj > __new(::cpp::VirtualArray array,int offset) {
			::hx::ObjectPtr< OffsetArrayIterator_obj > __this = new OffsetArrayIterator_obj();
			__this->__construct(array,offset);
			return __this;
		}

		inline static ::hx::ObjectPtr< OffsetArrayIterator_obj > __alloc(::hx::Ctx *_hx_ctx,::cpp::VirtualArray array,int offset) {
			OffsetArrayIterator_obj *__this = (OffsetArrayIterator_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(OffsetArrayIterator_obj), true, "funkin.vis.dsp._OffsetArray.OffsetArrayIterator"));
			*(void **)__this = OffsetArrayIterator_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_98b10ae30f37bbfc_65_new)
HXLINE(  66)		( ( ::funkin::vis::dsp::_OffsetArray::OffsetArrayIterator)(__this) )->array = array;
HXLINE(  67)		( ( ::funkin::vis::dsp::_OffsetArray::OffsetArrayIterator)(__this) )->offset = offset;
HXLINE(  68)		( ( ::funkin::vis::dsp::_OffsetArray::OffsetArrayIterator)(__this) )->enumeration = 0;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~OffsetArrayIterator_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("OffsetArrayIterator",f4,e4,3a,e6); }

		::cpp::VirtualArray array;
		int offset;
		int enumeration;
		 ::Dynamic next();
		::Dynamic next_dyn();

		bool hasNext();
		::Dynamic hasNext_dyn();

};

} // end namespace funkin
} // end namespace vis
} // end namespace dsp
} // end namespace _OffsetArray

#endif /* INCLUDED_funkin_vis_dsp__OffsetArray_OffsetArrayIterator */ 
